
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.haegrilontest.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.ColorHandlerEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.mcreator.haegrilontest.block.YellowtimberwestBlock;
import net.mcreator.haegrilontest.block.YellowtimbereastBlock;
import net.mcreator.haegrilontest.block.YellowtimbercrossBlock;
import net.mcreator.haegrilontest.block.YellowtimberBlock;
import net.mcreator.haegrilontest.block.WovenwoolyellowwallBlock;
import net.mcreator.haegrilontest.block.WovenwoolyellowstairsBlock;
import net.mcreator.haegrilontest.block.WovenwoolyellowslabBlock;
import net.mcreator.haegrilontest.block.WovenwoolyellowBlock;
import net.mcreator.haegrilontest.block.WovenwoolwhitewallBlock;
import net.mcreator.haegrilontest.block.WovenwoolwhitestairsBlock;
import net.mcreator.haegrilontest.block.WovenwoolwhiteslabBlock;
import net.mcreator.haegrilontest.block.WovenwoolwhiteBlock;
import net.mcreator.haegrilontest.block.WovenwoolredwallBlock;
import net.mcreator.haegrilontest.block.WovenwoolredstairsBlock;
import net.mcreator.haegrilontest.block.WovenwoolredslabBlock;
import net.mcreator.haegrilontest.block.WovenwoolredBlock;
import net.mcreator.haegrilontest.block.WovenwoollightgraywallBlock;
import net.mcreator.haegrilontest.block.WovenwoollightgraystairsBlock;
import net.mcreator.haegrilontest.block.WovenwoollightgrayslabBlock;
import net.mcreator.haegrilontest.block.WovenwoollightgrayBlock;
import net.mcreator.haegrilontest.block.WovenwoolgreenwallBlock;
import net.mcreator.haegrilontest.block.WovenwoolgreenstairsBlock;
import net.mcreator.haegrilontest.block.WovenwoolgreenslabBlock;
import net.mcreator.haegrilontest.block.WovenwoolgreenBlock;
import net.mcreator.haegrilontest.block.WovenwoolbluewallBlock;
import net.mcreator.haegrilontest.block.WovenwoolbluestairsBlock;
import net.mcreator.haegrilontest.block.WovenwoolblueslabBlock;
import net.mcreator.haegrilontest.block.WovenwoolblueBlock;
import net.mcreator.haegrilontest.block.WolfpeltBlock;
import net.mcreator.haegrilontest.block.WintergrassblockBlock;
import net.mcreator.haegrilontest.block.WindowframetopBlock;
import net.mcreator.haegrilontest.block.WindowframebottomBlock;
import net.mcreator.haegrilontest.block.WildonionsBlock;
import net.mcreator.haegrilontest.block.WildlilyofthevalleyBlock;
import net.mcreator.haegrilontest.block.WildcarrotsBlock;
import net.mcreator.haegrilontest.block.WildcabbagesBlock;
import net.mcreator.haegrilontest.block.WildbeetrootsBlock;
import net.mcreator.haegrilontest.block.WhitetimberwestBlock;
import net.mcreator.haegrilontest.block.WhitetimbereastBlock;
import net.mcreator.haegrilontest.block.WhitetimbercrossBlock;
import net.mcreator.haegrilontest.block.WhitetimberarchBlock;
import net.mcreator.haegrilontest.block.WhitetimberBlock;
import net.mcreator.haegrilontest.block.WhiteoaktimberwestBlock;
import net.mcreator.haegrilontest.block.WhiteoaktimberverticalBlock;
import net.mcreator.haegrilontest.block.WhiteoaktimbereastBlock;
import net.mcreator.haegrilontest.block.WhiteoaktimbercrossBlock;
import net.mcreator.haegrilontest.block.WhiteoaktimberclosestuddingBlock;
import net.mcreator.haegrilontest.block.WhiteoaktimberBlock;
import net.mcreator.haegrilontest.block.WhitedaubBlock;
import net.mcreator.haegrilontest.block.WhitedarktimberwestBlock;
import net.mcreator.haegrilontest.block.WhitedarktimberverticalBlock;
import net.mcreator.haegrilontest.block.WhitedarktimbereastBlock;
import net.mcreator.haegrilontest.block.WhitedarktimbercrossBlock;
import net.mcreator.haegrilontest.block.WhitedarktimberclosestuddingBlock;
import net.mcreator.haegrilontest.block.WhitedarktimberBlock;
import net.mcreator.haegrilontest.block.WheelBlock;
import net.mcreator.haegrilontest.block.Wheel1Block;
import net.mcreator.haegrilontest.block.WeavingloomBlock;
import net.mcreator.haegrilontest.block.WeaponrackBlock;
import net.mcreator.haegrilontest.block.WattleshortBlock;
import net.mcreator.haegrilontest.block.WattlecornerBlock;
import net.mcreator.haegrilontest.block.WattleBlock;
import net.mcreator.haegrilontest.block.VinesrosewhiteBlock;
import net.mcreator.haegrilontest.block.VertcobblestoneBlock;
import net.mcreator.haegrilontest.block.VanillawhiteconcreteBlock;
import net.mcreator.haegrilontest.block.VanillalightgrayconcreteBlock;
import net.mcreator.haegrilontest.block.VanillagreenconcreteBlock;
import net.mcreator.haegrilontest.block.VanillagrayconcreteBlock;
import net.mcreator.haegrilontest.block.UnlitcandleBlock;
import net.mcreator.haegrilontest.block.TudorbrickwallBlock;
import net.mcreator.haegrilontest.block.TudorbrickverticalBlock;
import net.mcreator.haegrilontest.block.TudorbricktrapdoorBlock;
import net.mcreator.haegrilontest.block.TudorbrickstairsBlock;
import net.mcreator.haegrilontest.block.TudorbrickslabBlock;
import net.mcreator.haegrilontest.block.TudorbricksagedBlock;
import net.mcreator.haegrilontest.block.TudorbricksBlock;
import net.mcreator.haegrilontest.block.TudorbrickcornerBlock;
import net.mcreator.haegrilontest.block.TripodpotBlock;
import net.mcreator.haegrilontest.block.TrapdoorcobblestoneBlock;
import net.mcreator.haegrilontest.block.TimberbeamwestBlock;
import net.mcreator.haegrilontest.block.TimberbeameastBlock;
import net.mcreator.haegrilontest.block.TimberbeamcrossBlock;
import net.mcreator.haegrilontest.block.TiedherbsBlock;
import net.mcreator.haegrilontest.block.TheeternaloneBlock;
import net.mcreator.haegrilontest.block.ThatchvertBlock;
import net.mcreator.haegrilontest.block.ThatchmossywallBlock;
import net.mcreator.haegrilontest.block.ThatchmossystairsBlock;
import net.mcreator.haegrilontest.block.ThatchmossyslabBlock;
import net.mcreator.haegrilontest.block.ThatchmossyBlock;
import net.mcreator.haegrilontest.block.ThatchgraywallBlock;
import net.mcreator.haegrilontest.block.ThatchgraystairsBlock;
import net.mcreator.haegrilontest.block.ThatchgrayslabBlock;
import net.mcreator.haegrilontest.block.ThatchgraycrossstitchwallBlock;
import net.mcreator.haegrilontest.block.ThatchgraycrossstitchstairsBlock;
import net.mcreator.haegrilontest.block.ThatchgraycrossstitchslabBlock;
import net.mcreator.haegrilontest.block.ThatchgraycrossstitchBlock;
import net.mcreator.haegrilontest.block.ThatchgrayBlock;
import net.mcreator.haegrilontest.block.ThatchdarkvertBlock;
import net.mcreator.haegrilontest.block.ThatchdarkcornerBlock;
import net.mcreator.haegrilontest.block.ThatchcornerBlock;
import net.mcreator.haegrilontest.block.ThatchcarpetdarkBlock;
import net.mcreator.haegrilontest.block.ThatchcarpetBlock;
import net.mcreator.haegrilontest.block.TestworldPortalBlock;
import net.mcreator.haegrilontest.block.TeasetBlock;
import net.mcreator.haegrilontest.block.TatamiblockhalfBlock;
import net.mcreator.haegrilontest.block.TatamiblockfullBlock;
import net.mcreator.haegrilontest.block.Tatami1x2Block;
import net.mcreator.haegrilontest.block.Tatami1x1Block;
import net.mcreator.haegrilontest.block.TanningrackBlock;
import net.mcreator.haegrilontest.block.TableturnedoverBlock;
import net.mcreator.haegrilontest.block.TableBlock;
import net.mcreator.haegrilontest.block.StrawbedBlock;
import net.mcreator.haegrilontest.block.StrawbaleBlock;
import net.mcreator.haegrilontest.block.StoveBlock;
import net.mcreator.haegrilontest.block.StoollargeBlock;
import net.mcreator.haegrilontest.block.StoolBlock;
import net.mcreator.haegrilontest.block.StoneverticalBlock;
import net.mcreator.haegrilontest.block.StonetrapdoorBlock;
import net.mcreator.haegrilontest.block.Stonetest1Block;
import net.mcreator.haegrilontest.block.Stonetest0Block;
import net.mcreator.haegrilontest.block.StonecornerBlock;
import net.mcreator.haegrilontest.block.StonebrickcarvedBlock;
import net.mcreator.haegrilontest.block.StatuswipBlock;
import net.mcreator.haegrilontest.block.StatusmiddleclassBlock;
import net.mcreator.haegrilontest.block.StatuslowclassBlock;
import net.mcreator.haegrilontest.block.StatushighclassBlock;
import net.mcreator.haegrilontest.block.StatuserrorBlock;
import net.mcreator.haegrilontest.block.StatusdoneBlock;
import net.mcreator.haegrilontest.block.StatusblockcountBlock;
import net.mcreator.haegrilontest.block.StatusapprovedBlock;
import net.mcreator.haegrilontest.block.SprucewalllogBlock;
import net.mcreator.haegrilontest.block.SpruceverticalBlock;
import net.mcreator.haegrilontest.block.SprucethinwallBlock;
import net.mcreator.haegrilontest.block.SpruceshutterrightBlock;
import net.mcreator.haegrilontest.block.SpruceshutteropenrightBlock;
import net.mcreator.haegrilontest.block.SpruceshutteropenBlock;
import net.mcreator.haegrilontest.block.SpruceshuttermiddleopenBlock;
import net.mcreator.haegrilontest.block.SpruceshuttermiddleBlock;
import net.mcreator.haegrilontest.block.SpruceshutterBlock;
import net.mcreator.haegrilontest.block.SprucerailingtBlock;
import net.mcreator.haegrilontest.block.SprucerailingmBlock;
import net.mcreator.haegrilontest.block.SprucerailingbBlock;
import net.mcreator.haegrilontest.block.SprucerailingBlock;
import net.mcreator.haegrilontest.block.SprucefencelogBlock;
import net.mcreator.haegrilontest.block.SprucecornerBlock;
import net.mcreator.haegrilontest.block.SpruceceilingblockBlock;
import net.mcreator.haegrilontest.block.SprucecabinetBlock;
import net.mcreator.haegrilontest.block.SootlayerBlock;
import net.mcreator.haegrilontest.block.Sootlayer2Block;
import net.mcreator.haegrilontest.block.SoilBlock;
import net.mcreator.haegrilontest.block.SmokeBlock;
import net.mcreator.haegrilontest.block.SmallredbricksBlock;
import net.mcreator.haegrilontest.block.SmallbushBlock;
import net.mcreator.haegrilontest.block.SmallbricktrapdoorBlock;
import net.mcreator.haegrilontest.block.SmallbricksverticalBlock;
import net.mcreator.haegrilontest.block.SmallbrickscornerBlock;
import net.mcreator.haegrilontest.block.SlatetipshinglesBlock;
import net.mcreator.haegrilontest.block.SlatetipredBlock;
import net.mcreator.haegrilontest.block.SlatetipnetherBlock;
import net.mcreator.haegrilontest.block.SlatetipgreenBlock;
import net.mcreator.haegrilontest.block.SlatetipbrownBlock;
import net.mcreator.haegrilontest.block.SlatetipblueBlock;
import net.mcreator.haegrilontest.block.SlatetipblackBlock;
import net.mcreator.haegrilontest.block.SlatebrickwallBlock;
import net.mcreator.haegrilontest.block.SlatebrickverticalBlock;
import net.mcreator.haegrilontest.block.SlatebricktrapdoorBlock;
import net.mcreator.haegrilontest.block.SlatebrickstairsBlock;
import net.mcreator.haegrilontest.block.SlatebrickslabBlock;
import net.mcreator.haegrilontest.block.SlatebricksBlock;
import net.mcreator.haegrilontest.block.SlatebrickcornerBlock;
import net.mcreator.haegrilontest.block.SkilletshangedBlock;
import net.mcreator.haegrilontest.block.SkilletBlock;
import net.mcreator.haegrilontest.block.SimpleaxeBlock;
import net.mcreator.haegrilontest.block.Shovel0Block;
import net.mcreator.haegrilontest.block.ShojidooropenBlock;
import net.mcreator.haegrilontest.block.ShojidoorclosedBlock;
import net.mcreator.haegrilontest.block.ShojiBlock;
import net.mcreator.haegrilontest.block.ShingleswallBlock;
import net.mcreator.haegrilontest.block.ShinglesverticalBlock;
import net.mcreator.haegrilontest.block.ShinglesstairsBlock;
import net.mcreator.haegrilontest.block.ShinglesslabBlock;
import net.mcreator.haegrilontest.block.ShinglescornerBlock;
import net.mcreator.haegrilontest.block.ShinglesBlock;
import net.mcreator.haegrilontest.block.ScreenBlock;
import net.mcreator.haegrilontest.block.SausagestallBlock;
import net.mcreator.haegrilontest.block.SausagesBlock;
import net.mcreator.haegrilontest.block.SandstonesmallbrickwallBlock;
import net.mcreator.haegrilontest.block.SandstonesmallbrickstairsBlock;
import net.mcreator.haegrilontest.block.SandstonesmallbrickslabBlock;
import net.mcreator.haegrilontest.block.SandstonesmallbricksBlock;
import net.mcreator.haegrilontest.block.SandstonelargebricksBlock;
import net.mcreator.haegrilontest.block.SandstonediamondfloortilewallBlock;
import net.mcreator.haegrilontest.block.SandstonediamondfloortilestairsBlock;
import net.mcreator.haegrilontest.block.SandstonediamondfloortileslabBlock;
import net.mcreator.haegrilontest.block.SandstonediamondfloortilesBlock;
import net.mcreator.haegrilontest.block.SandstonecobbledwallBlock;
import net.mcreator.haegrilontest.block.SandstonecobbledstairsBlock;
import net.mcreator.haegrilontest.block.SandstonecobbledslabBlock;
import net.mcreator.haegrilontest.block.SandstonecobbledmossyBlock;
import net.mcreator.haegrilontest.block.SandstonecobbledBlock;
import net.mcreator.haegrilontest.block.SandstoneagedBlock;
import net.mcreator.haegrilontest.block.SackslabBlock;
import net.mcreator.haegrilontest.block.SackBlock;
import net.mcreator.haegrilontest.block.RopeverticalBlock;
import net.mcreator.haegrilontest.block.RopehorizontalcurvedBlock;
import net.mcreator.haegrilontest.block.RopehorizontalBlock;
import net.mcreator.haegrilontest.block.RopeharnessBlock;
import net.mcreator.haegrilontest.block.RopediagonalBlock;
import net.mcreator.haegrilontest.block.RooftilesgrayBlock;
import net.mcreator.haegrilontest.block.RiverpebblesBlock;
import net.mcreator.haegrilontest.block.RedwindowframeBlock;
import net.mcreator.haegrilontest.block.RedtimberwhitewestBlock;
import net.mcreator.haegrilontest.block.RedtimberwhiteverticalBlock;
import net.mcreator.haegrilontest.block.RedtimberwhiteeastBlock;
import net.mcreator.haegrilontest.block.RedtimberwhitecrossBlock;
import net.mcreator.haegrilontest.block.RedtimberwhiteBlock;
import net.mcreator.haegrilontest.block.RedtimberwestBlock;
import net.mcreator.haegrilontest.block.RedtimbereastBlock;
import net.mcreator.haegrilontest.block.RedtimbercrossBlock;
import net.mcreator.haegrilontest.block.RedtimberarchBlock;
import net.mcreator.haegrilontest.block.RedtimberBlock;
import net.mcreator.haegrilontest.block.RedslateverticalBlock;
import net.mcreator.haegrilontest.block.RedslatecornerBlock;
import net.mcreator.haegrilontest.block.Profession9Block;
import net.mcreator.haegrilontest.block.Profession8Block;
import net.mcreator.haegrilontest.block.Profession7Block;
import net.mcreator.haegrilontest.block.Profession6Block;
import net.mcreator.haegrilontest.block.Profession5Block;
import net.mcreator.haegrilontest.block.Profession4Block;
import net.mcreator.haegrilontest.block.Profession3Block;
import net.mcreator.haegrilontest.block.Profession2Block;
import net.mcreator.haegrilontest.block.Profession23Block;
import net.mcreator.haegrilontest.block.Profession22Block;
import net.mcreator.haegrilontest.block.Profession21Block;
import net.mcreator.haegrilontest.block.Profession20Block;
import net.mcreator.haegrilontest.block.Profession1Block;
import net.mcreator.haegrilontest.block.Profession19Block;
import net.mcreator.haegrilontest.block.Profession18Block;
import net.mcreator.haegrilontest.block.Profession17Block;
import net.mcreator.haegrilontest.block.Profession16Block;
import net.mcreator.haegrilontest.block.Profession15Block;
import net.mcreator.haegrilontest.block.Profession14Block;
import net.mcreator.haegrilontest.block.Profession13Block;
import net.mcreator.haegrilontest.block.Profession12Block;
import net.mcreator.haegrilontest.block.Profession11Block;
import net.mcreator.haegrilontest.block.Profession10Block;
import net.mcreator.haegrilontest.block.Profession0Block;
import net.mcreator.haegrilontest.block.PowdersackBlock;
import net.mcreator.haegrilontest.block.PotsgroupedBlock;
import net.mcreator.haegrilontest.block.PolishedgranitelargebricksBlock;
import net.mcreator.haegrilontest.block.PolishedgranitedarkBlock;
import net.mcreator.haegrilontest.block.Polishedgranite2Block;
import net.mcreator.haegrilontest.block.Plate1Block;
import net.mcreator.haegrilontest.block.Plate0Block;
import net.mcreator.haegrilontest.block.PitchforkBlock;
import net.mcreator.haegrilontest.block.PewterflagonBlock;
import net.mcreator.haegrilontest.block.PaleyellowdaubBlock;
import net.mcreator.haegrilontest.block.PaleyellowdarktimberwestBlock;
import net.mcreator.haegrilontest.block.PaleyellowdarktimbereastBlock;
import net.mcreator.haegrilontest.block.PaleyellowdarktimbercrossBlock;
import net.mcreator.haegrilontest.block.PaleyellowdarktimberBlock;
import net.mcreator.haegrilontest.block.OnionsBlock;
import net.mcreator.haegrilontest.block.OnioncrateBlock;
import net.mcreator.haegrilontest.block.OldworldPortalBlock;
import net.mcreator.haegrilontest.block.OakwallpanelBlock;
import net.mcreator.haegrilontest.block.OakwalllogBlock;
import net.mcreator.haegrilontest.block.OakverticalBlock;
import net.mcreator.haegrilontest.block.OakthinwallBlock;
import net.mcreator.haegrilontest.block.OakshutterrightBlock;
import net.mcreator.haegrilontest.block.OakshutteropenrightBlock;
import net.mcreator.haegrilontest.block.OakshutteropenBlock;
import net.mcreator.haegrilontest.block.OakshutterBlock;
import net.mcreator.haegrilontest.block.OakfencelogBlock;
import net.mcreator.haegrilontest.block.OakdoorwowindowsBlock;
import net.mcreator.haegrilontest.block.OakcornerBlock;
import net.mcreator.haegrilontest.block.OakcabinetBlock;
import net.mcreator.haegrilontest.block.NewshingletexturetestBlock;
import net.mcreator.haegrilontest.block.NetherbricksverticalBlock;
import net.mcreator.haegrilontest.block.NetherbrickscornerBlock;
import net.mcreator.haegrilontest.block.NailedplankslabBlock;
import net.mcreator.haegrilontest.block.NailedplanksBlock;
import net.mcreator.haegrilontest.block.MuttonBlock;
import net.mcreator.haegrilontest.block.MushroomcolonyBlock;
import net.mcreator.haegrilontest.block.MuddycobbleverticalBlock;
import net.mcreator.haegrilontest.block.MuddycobbletrapdoorBlock;
import net.mcreator.haegrilontest.block.MuddycobblecornerBlock;
import net.mcreator.haegrilontest.block.MossystoneBlock;
import net.mcreator.haegrilontest.block.MossBlock;
import net.mcreator.haegrilontest.block.LogwallBlock;
import net.mcreator.haegrilontest.block.LimestonewallBlock;
import net.mcreator.haegrilontest.block.LimestonestairsBlock;
import net.mcreator.haegrilontest.block.LimestoneslabBlock;
import net.mcreator.haegrilontest.block.LimestoneBlock;
import net.mcreator.haegrilontest.block.Limestone3wallBlock;
import net.mcreator.haegrilontest.block.Limestone3stairsBlock;
import net.mcreator.haegrilontest.block.Limestone3slabBlock;
import net.mcreator.haegrilontest.block.Limestone3Block;
import net.mcreator.haegrilontest.block.Limestone2wallBlock;
import net.mcreator.haegrilontest.block.Limestone2stairsBlock;
import net.mcreator.haegrilontest.block.Limestone2slabBlock;
import net.mcreator.haegrilontest.block.Limestone2Block;
import net.mcreator.haegrilontest.block.Limestone1wallBlock;
import net.mcreator.haegrilontest.block.Limestone1stairsBlock;
import net.mcreator.haegrilontest.block.Limestone1slabBlock;
import net.mcreator.haegrilontest.block.Limestone1Block;
import net.mcreator.haegrilontest.block.Limestone0wallBlock;
import net.mcreator.haegrilontest.block.Limestone0stairsBlock;
import net.mcreator.haegrilontest.block.Limestone0slabBlock;
import net.mcreator.haegrilontest.block.Limestone0Block;
import net.mcreator.haegrilontest.block.LightmudBlock;
import net.mcreator.haegrilontest.block.LightmossBlock;
import net.mcreator.haegrilontest.block.LargecookingpotBlock;
import net.mcreator.haegrilontest.block.KnifeBlock;
import net.mcreator.haegrilontest.block.JungleverticalBlock;
import net.mcreator.haegrilontest.block.JunglethingwallBlock;
import net.mcreator.haegrilontest.block.JunglecornerBlock;
import net.mcreator.haegrilontest.block.IcewallBlock;
import net.mcreator.haegrilontest.block.IcespikeBlock;
import net.mcreator.haegrilontest.block.HopperspruceBlock;
import net.mcreator.haegrilontest.block.HoppersmallsmoothbricksBlock;
import net.mcreator.haegrilontest.block.HopperslatebrickBlock;
import net.mcreator.haegrilontest.block.HoppersandstoneBlock;
import net.mcreator.haegrilontest.block.HopperoakBlock;
import net.mcreator.haegrilontest.block.HopperjungleBlock;
import net.mcreator.haegrilontest.block.HopperdarkoakBlock;
import net.mcreator.haegrilontest.block.HoppercobbleBlock;
import net.mcreator.haegrilontest.block.HopperblackwoodBlock;
import net.mcreator.haegrilontest.block.HopperbirchBlock;
import net.mcreator.haegrilontest.block.HangingbowlBlock;
import net.mcreator.haegrilontest.block.HangedfishBlock;
import net.mcreator.haegrilontest.block.GuardrailBlock;
import net.mcreator.haegrilontest.block.GreenrooftileverticalslabBlock;
import net.mcreator.haegrilontest.block.GreenrooftileswallBlock;
import net.mcreator.haegrilontest.block.GreenrooftilesstairsBlock;
import net.mcreator.haegrilontest.block.GreenrooftilesslabBlock;
import net.mcreator.haegrilontest.block.GreenrooftilescornerBlock;
import net.mcreator.haegrilontest.block.GreenrooftilesBlock;
import net.mcreator.haegrilontest.block.GrayoaktimberwestBlock;
import net.mcreator.haegrilontest.block.GrayoaktimbereastBlock;
import net.mcreator.haegrilontest.block.GrayoaktimbercrossBlock;
import net.mcreator.haegrilontest.block.GrayoaktimberBlock;
import net.mcreator.haegrilontest.block.GrassblockslabBlock;
import net.mcreator.haegrilontest.block.GraniteverticalBlock;
import net.mcreator.haegrilontest.block.GranitetrapdoorBlock;
import net.mcreator.haegrilontest.block.GranitesmallbrickwallBlock;
import net.mcreator.haegrilontest.block.GranitesmallbricktrapdoorBlock;
import net.mcreator.haegrilontest.block.GranitesmallbrickstairsBlock;
import net.mcreator.haegrilontest.block.GranitesmallbrickslabBlock;
import net.mcreator.haegrilontest.block.GranitesmallbricksBlock;
import net.mcreator.haegrilontest.block.GranitelargebricksBlock;
import net.mcreator.haegrilontest.block.GranitecornerBlock;
import net.mcreator.haegrilontest.block.GranitecobblewallBlock;
import net.mcreator.haegrilontest.block.GranitecobbletrapdoorBlock;
import net.mcreator.haegrilontest.block.GranitecobblestairsBlock;
import net.mcreator.haegrilontest.block.GranitecobbleslabBlock;
import net.mcreator.haegrilontest.block.GranitecobbledpaledarkBlock;
import net.mcreator.haegrilontest.block.GranitecobbleddarkBlock;
import net.mcreator.haegrilontest.block.GranitecobbleBlock;
import net.mcreator.haegrilontest.block.GranitebrickwallBlock;
import net.mcreator.haegrilontest.block.GranitebricktrapdoorBlock;
import net.mcreator.haegrilontest.block.GranitebrickstairsBlock;
import net.mcreator.haegrilontest.block.GranitebrickslabBlock;
import net.mcreator.haegrilontest.block.GranitebricksBlock;
import net.mcreator.haegrilontest.block.GlassflagonBlock;
import net.mcreator.haegrilontest.block.GlassfancyframepaneBlock;
import net.mcreator.haegrilontest.block.GlassfancyframeBlock;
import net.mcreator.haegrilontest.block.FrisiisoldierguardBlock;
import net.mcreator.haegrilontest.block.FrisiisoldierattackBlock;
import net.mcreator.haegrilontest.block.FrankishsoldierguardBlock;
import net.mcreator.haegrilontest.block.FrankishsoldierattackBlock;
import net.mcreator.haegrilontest.block.ForestfloorBlock;
import net.mcreator.haegrilontest.block.Floorcarved3Block;
import net.mcreator.haegrilontest.block.FliesBlock;
import net.mcreator.haegrilontest.block.FirewoodslabBlock;
import net.mcreator.haegrilontest.block.FirewoodpileBlock;
import net.mcreator.haegrilontest.block.FarmlandalwaysmoistBlock;
import net.mcreator.haegrilontest.block.DrymudBlock;
import net.mcreator.haegrilontest.block.DirtlayerBlock;
import net.mcreator.haegrilontest.block.Dirtlayer8Block;
import net.mcreator.haegrilontest.block.Dirtlayer7Block;
import net.mcreator.haegrilontest.block.Dirtlayer6Block;
import net.mcreator.haegrilontest.block.Dirtlayer5Block;
import net.mcreator.haegrilontest.block.Dirtlayer4Block;
import net.mcreator.haegrilontest.block.Dirtlayer3Block;
import net.mcreator.haegrilontest.block.Dirtlayer2Block;
import net.mcreator.haegrilontest.block.DioriteverticalBlock;
import net.mcreator.haegrilontest.block.DioritetrapdoorBlock;
import net.mcreator.haegrilontest.block.DioritesmallbricksBlock;
import net.mcreator.haegrilontest.block.DioritelargebrickwallBlock;
import net.mcreator.haegrilontest.block.DioritelargebrickstairsBlock;
import net.mcreator.haegrilontest.block.DioritelargebrickslabBlock;
import net.mcreator.haegrilontest.block.DioritelargebricksBlock;
import net.mcreator.haegrilontest.block.DioritecornerBlock;
import net.mcreator.haegrilontest.block.DeadleavesBlock;
import net.mcreator.haegrilontest.block.DarkstrawbedBlock;
import net.mcreator.haegrilontest.block.DarksandstonesmallbricksBlock;
import net.mcreator.haegrilontest.block.DarksandstoneroughcobbleBlock;
import net.mcreator.haegrilontest.block.DarksandstonelargebrickwallBlock;
import net.mcreator.haegrilontest.block.DarksandstonelargebrickstairsBlock;
import net.mcreator.haegrilontest.block.DarksandstonelargebrickslabBlock;
import net.mcreator.haegrilontest.block.DarksandstonelargebricksBlock;
import net.mcreator.haegrilontest.block.DarksandstonedustybricksBlock;
import net.mcreator.haegrilontest.block.DarksandstonecobbleBlock;
import net.mcreator.haegrilontest.block.DarksandstonebricksBlock;
import net.mcreator.haegrilontest.block.DarkparquetBlock;
import net.mcreator.haegrilontest.block.DarkoakwallpanelBlock;
import net.mcreator.haegrilontest.block.DarkoakverticalBlock;
import net.mcreator.haegrilontest.block.DarkoakthinwallBlock;
import net.mcreator.haegrilontest.block.DarkoakcornerBlock;
import net.mcreator.haegrilontest.block.DarkmudBlock;
import net.mcreator.haegrilontest.block.DarkmossBlock;
import net.mcreator.haegrilontest.block.DarkdrymudBlock;
import net.mcreator.haegrilontest.block.DanishsoldierguardBlock;
import net.mcreator.haegrilontest.block.DanishsoldierattackBlock;
import net.mcreator.haegrilontest.block.CushionBlock;
import net.mcreator.haegrilontest.block.CrateslabBlock;
import net.mcreator.haegrilontest.block.CrateBlock;
import net.mcreator.haegrilontest.block.CornercobblestoneBlock;
import net.mcreator.haegrilontest.block.CookedrabbitBlock;
import net.mcreator.haegrilontest.block.CookedchickenBlock;
import net.mcreator.haegrilontest.block.CobblewindowgothicBlock;
import net.mcreator.haegrilontest.block.CobblestonedoorBlock;
import net.mcreator.haegrilontest.block.CobbleicyBlock;
import net.mcreator.haegrilontest.block.ClotheslineBlock;
import net.mcreator.haegrilontest.block.ClotheshangerBlock;
import net.mcreator.haegrilontest.block.ClosedhearthBlock;
import net.mcreator.haegrilontest.block.CleaverBlock;
import net.mcreator.haegrilontest.block.ClaypotBlock;
import net.mcreator.haegrilontest.block.CinderblockBlock;
import net.mcreator.haegrilontest.block.ChairBlock;
import net.mcreator.haegrilontest.block.ChainharnessBlock;
import net.mcreator.haegrilontest.block.ChabudaiBlock;
import net.mcreator.haegrilontest.block.CeramicflagonBlock;
import net.mcreator.haegrilontest.block.CavestoneBlock;
import net.mcreator.haegrilontest.block.CarrotcrateBlock;
import net.mcreator.haegrilontest.block.CabbagesBlock;
import net.mcreator.haegrilontest.block.CabbagecrateBlock;
import net.mcreator.haegrilontest.block.BushyspruceleavesBlock;
import net.mcreator.haegrilontest.block.BushyoakleavesautumnalBlock;
import net.mcreator.haegrilontest.block.BushyoakleavesapplesBlock;
import net.mcreator.haegrilontest.block.BushyoakleavesBlock;
import net.mcreator.haegrilontest.block.BushycherryleavesbranchBlock;
import net.mcreator.haegrilontest.block.BushybirchleavesBlock;
import net.mcreator.haegrilontest.block.BucketBlock;
import net.mcreator.haegrilontest.block.BrowntimberwestBlock;
import net.mcreator.haegrilontest.block.BrowntimbereastBlock;
import net.mcreator.haegrilontest.block.BrowntimbercrossBlock;
import net.mcreator.haegrilontest.block.BrowntimberarchBlock;
import net.mcreator.haegrilontest.block.BrowntimberBlock;
import net.mcreator.haegrilontest.block.BrownslateverticalBlock;
import net.mcreator.haegrilontest.block.BrownslatecornerBlock;
import net.mcreator.haegrilontest.block.BrowndaubBlock;
import net.mcreator.haegrilontest.block.BronzwallBlock;
import net.mcreator.haegrilontest.block.BronzewallOxidizedBlock;
import net.mcreator.haegrilontest.block.BronzestairsOxidizedBlock;
import net.mcreator.haegrilontest.block.BronzestairsBlock;
import net.mcreator.haegrilontest.block.BronzeslaboxidizedBlock;
import net.mcreator.haegrilontest.block.BronzeslabBlock;
import net.mcreator.haegrilontest.block.BronzefenceoxidizedBlock;
import net.mcreator.haegrilontest.block.BronzefenceBlock;
import net.mcreator.haegrilontest.block.BronzeblockoxidizedBlock;
import net.mcreator.haegrilontest.block.BronzeblockBlock;
import net.mcreator.haegrilontest.block.BricksverticalBlock;
import net.mcreator.haegrilontest.block.BrickstrapdoorBlock;
import net.mcreator.haegrilontest.block.BrickscornerBlock;
import net.mcreator.haegrilontest.block.BricksagedBlock;
import net.mcreator.haegrilontest.block.BrickoaktimberwestBlock;
import net.mcreator.haegrilontest.block.BrickoaktimbereastBlock;
import net.mcreator.haegrilontest.block.BrickoaktimbercrossBlock;
import net.mcreator.haegrilontest.block.BrickoaktimberclosestuddingBlock;
import net.mcreator.haegrilontest.block.BrickoaktimberBlock;
import net.mcreator.haegrilontest.block.BluewindowframeBlock;
import net.mcreator.haegrilontest.block.BluewhitetimberwestBlock;
import net.mcreator.haegrilontest.block.BluewhitetimberverticalBlock;
import net.mcreator.haegrilontest.block.BluetimberwhiteeastBlock;
import net.mcreator.haegrilontest.block.BluetimberwhitecrossBlock;
import net.mcreator.haegrilontest.block.BluetimberwhiteBlock;
import net.mcreator.haegrilontest.block.BlueslateverticalBlock;
import net.mcreator.haegrilontest.block.BlueslatecornerBlock;
import net.mcreator.haegrilontest.block.BlackwoodwallBlock;
import net.mcreator.haegrilontest.block.BlackwoodverticalplanksBlock;
import net.mcreator.haegrilontest.block.BlackwoodthinwallBlock;
import net.mcreator.haegrilontest.block.BlackwoodstairsBlock;
import net.mcreator.haegrilontest.block.BlackwoodslabBlock;
import net.mcreator.haegrilontest.block.BlackwoodfenceBlock;
import net.mcreator.haegrilontest.block.BlackwoodBlock;
import net.mcreator.haegrilontest.block.BlackrooftilewallBlock;
import net.mcreator.haegrilontest.block.BlackrooftileverticalBlock;
import net.mcreator.haegrilontest.block.BlackrooftilestairsBlock;
import net.mcreator.haegrilontest.block.BlackrooftileslabBlock;
import net.mcreator.haegrilontest.block.BlackrooftilesBlock;
import net.mcreator.haegrilontest.block.BlackrooftilecornerBlock;
import net.mcreator.haegrilontest.block.Blackmarble32Block;
import net.mcreator.haegrilontest.block.BirchwalllogBlock;
import net.mcreator.haegrilontest.block.BirchverticalBlock;
import net.mcreator.haegrilontest.block.BirchthinwallBlock;
import net.mcreator.haegrilontest.block.BirchfencelogBlock;
import net.mcreator.haegrilontest.block.BirchcornerBlock;
import net.mcreator.haegrilontest.block.BigleafedgrassBlock;
import net.mcreator.haegrilontest.block.BeetrootcrateBlock;
import net.mcreator.haegrilontest.block.BeefBlock;
import net.mcreator.haegrilontest.block.BeamhorisontalBlock;
import net.mcreator.haegrilontest.block.BeamBlock;
import net.mcreator.haegrilontest.block.BasketslabopenBlock;
import net.mcreator.haegrilontest.block.BasketslabBlock;
import net.mcreator.haegrilontest.block.BasketblockopenBlock;
import net.mcreator.haegrilontest.block.BasketblockBlock;
import net.mcreator.haegrilontest.block.BasketBlock;
import net.mcreator.haegrilontest.block.BanneryellowBlock;
import net.mcreator.haegrilontest.block.BannerredBlock;
import net.mcreator.haegrilontest.block.BannerhighfortBlock;
import net.mcreator.haegrilontest.block.BannergreenBlock;
import net.mcreator.haegrilontest.block.AshlightBlock;
import net.mcreator.haegrilontest.block.ArrowslitsmalllightstonebrickBlock;
import net.mcreator.haegrilontest.block.ArrowslitsandstoneBlock;
import net.mcreator.haegrilontest.block.ArrowslitgranitebrickBlock;
import net.mcreator.haegrilontest.block.ArrowslitdarkcobblestoneBlock;
import net.mcreator.haegrilontest.block.ArrowslitcobblestoneBlock;
import net.mcreator.haegrilontest.block.AnglosaxonsoldierguardBlock;
import net.mcreator.haegrilontest.block.AnglosaxonsoldierattackBlock;
import net.mcreator.haegrilontest.block.AndesiteverticalBlock;
import net.mcreator.haegrilontest.block.AndesitetrapdoorBlock;
import net.mcreator.haegrilontest.block.AndesitesmallbricksBlock;
import net.mcreator.haegrilontest.block.AndesitelargebrickwallBlock;
import net.mcreator.haegrilontest.block.AndesitelargebrickstairsBlock;
import net.mcreator.haegrilontest.block.AndesitelargebrickslabBlock;
import net.mcreator.haegrilontest.block.AndesitelargebricksBlock;
import net.mcreator.haegrilontest.block.AndesitecornerBlock;
import net.mcreator.haegrilontest.block.AndesitecobbledwallBlock;
import net.mcreator.haegrilontest.block.AndesitecobbledstairsBlock;
import net.mcreator.haegrilontest.block.AndesitecobbledslabBlock;
import net.mcreator.haegrilontest.block.AndesitecobbleddarkBlock;
import net.mcreator.haegrilontest.block.AndesitecobbledBlock;
import net.mcreator.haegrilontest.block.Andesitecobbled2Block;
import net.mcreator.haegrilontest.block.AadoorBlock;
import net.mcreator.haegrilontest.block.AaatrapdoorBlock;
import net.mcreator.haegrilontest.HaegrilontestMod;

public class HaegrilontestModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, HaegrilontestMod.MODID);
	public static final RegistryObject<Block> SMALLREDBRICKS = REGISTRY.register("smallredbricks", () -> new SmallredbricksBlock());
	public static final RegistryObject<Block> BRICKSAGED = REGISTRY.register("bricksaged", () -> new BricksagedBlock());
	public static final RegistryObject<Block> GRANITECOBBLEDDARK = REGISTRY.register("granitecobbleddark", () -> new GranitecobbleddarkBlock());
	public static final RegistryObject<Block> GRANITECOBBLEDPALEDARK = REGISTRY.register("granitecobbledpaledark",
			() -> new GranitecobbledpaledarkBlock());
	public static final RegistryObject<Block> DARKSANDSTONEROUGHCOBBLE = REGISTRY.register("darksandstoneroughcobble",
			() -> new DarksandstoneroughcobbleBlock());
	public static final RegistryObject<Block> DARKSANDSTONECOBBLE = REGISTRY.register("darksandstonecobble", () -> new DarksandstonecobbleBlock());
	public static final RegistryObject<Block> DARKSANDSTONEBRICKS = REGISTRY.register("darksandstonebricks", () -> new DarksandstonebricksBlock());
	public static final RegistryObject<Block> DARKSANDSTONEDUSTYBRICKS = REGISTRY.register("darksandstonedustybricks",
			() -> new DarksandstonedustybricksBlock());
	public static final RegistryObject<Block> DARKSANDSTONESMALLBRICKS = REGISTRY.register("darksandstonesmallbricks",
			() -> new DarksandstonesmallbricksBlock());
	public static final RegistryObject<Block> POLISHEDGRANITEDARK = REGISTRY.register("polishedgranitedark", () -> new PolishedgranitedarkBlock());
	public static final RegistryObject<Block> POLISHEDGRANITE_2 = REGISTRY.register("polishedgranite_2", () -> new Polishedgranite2Block());
	public static final RegistryObject<Block> POLISHEDGRANITELARGEBRICKS = REGISTRY.register("polishedgranitelargebricks",
			() -> new PolishedgranitelargebricksBlock());
	public static final RegistryObject<Block> DARKSANDSTONELARGEBRICKS = REGISTRY.register("darksandstonelargebricks",
			() -> new DarksandstonelargebricksBlock());
	public static final RegistryObject<Block> FLOORCARVED_3 = REGISTRY.register("floorcarved_3", () -> new Floorcarved3Block());
	public static final RegistryObject<Block> SANDSTONEAGED = REGISTRY.register("sandstoneaged", () -> new SandstoneagedBlock());
	public static final RegistryObject<Block> SANDSTONECOBBLED = REGISTRY.register("sandstonecobbled", () -> new SandstonecobbledBlock());
	public static final RegistryObject<Block> SANDSTONECOBBLEDMOSSY = REGISTRY.register("sandstonecobbledmossy",
			() -> new SandstonecobbledmossyBlock());
	public static final RegistryObject<Block> SANDSTONESMALLBRICKS = REGISTRY.register("sandstonesmallbricks", () -> new SandstonesmallbricksBlock());
	public static final RegistryObject<Block> SANDSTONELARGEBRICKS = REGISTRY.register("sandstonelargebricks", () -> new SandstonelargebricksBlock());
	public static final RegistryObject<Block> HOPPERSANDSTONE = REGISTRY.register("hoppersandstone", () -> new HoppersandstoneBlock());
	public static final RegistryObject<Block> ARROWSLITSANDSTONE = REGISTRY.register("arrowslitsandstone", () -> new ArrowslitsandstoneBlock());
	public static final RegistryObject<Block> STONETEST_0 = REGISTRY.register("stonetest_0", () -> new Stonetest0Block());
	public static final RegistryObject<Block> COBBLEICY = REGISTRY.register("cobbleicy", () -> new CobbleicyBlock());
	public static final RegistryObject<Block> CAVESTONE = REGISTRY.register("cavestone", () -> new CavestoneBlock());
	public static final RegistryObject<Block> STONEBRICKCARVED = REGISTRY.register("stonebrickcarved", () -> new StonebrickcarvedBlock());
	public static final RegistryObject<Block> STONEVERTICAL = REGISTRY.register("stonevertical", () -> new StoneverticalBlock());
	public static final RegistryObject<Block> STONECORNER = REGISTRY.register("stonecorner", () -> new StonecornerBlock());
	public static final RegistryObject<Block> STONETRAPDOOR = REGISTRY.register("stonetrapdoor", () -> new StonetrapdoorBlock());
	public static final RegistryObject<Block> GRANITECORNER = REGISTRY.register("granitecorner", () -> new GranitecornerBlock());
	public static final RegistryObject<Block> GRANITEVERTICAL = REGISTRY.register("granitevertical", () -> new GraniteverticalBlock());
	public static final RegistryObject<Block> GRANITETRAPDOOR = REGISTRY.register("granitetrapdoor", () -> new GranitetrapdoorBlock());
	public static final RegistryObject<Block> DIORITELARGEBRICKS = REGISTRY.register("dioritelargebricks", () -> new DioritelargebricksBlock());
	public static final RegistryObject<Block> DIORITESMALLBRICKS = REGISTRY.register("dioritesmallbricks", () -> new DioritesmallbricksBlock());
	public static final RegistryObject<Block> DIORITECORNER = REGISTRY.register("dioritecorner", () -> new DioritecornerBlock());
	public static final RegistryObject<Block> DIORITEVERTICAL = REGISTRY.register("dioritevertical", () -> new DioriteverticalBlock());
	public static final RegistryObject<Block> DIORITETRAPDOOR = REGISTRY.register("dioritetrapdoor", () -> new DioritetrapdoorBlock());
	public static final RegistryObject<Block> ANDESITECOBBLEDDARK = REGISTRY.register("andesitecobbleddark", () -> new AndesitecobbleddarkBlock());
	public static final RegistryObject<Block> ANDESITECOBBLED_2 = REGISTRY.register("andesitecobbled_2", () -> new Andesitecobbled2Block());
	public static final RegistryObject<Block> ANDESITECOBBLED = REGISTRY.register("andesitecobbled", () -> new AndesitecobbledBlock());
	public static final RegistryObject<Block> ANDESITELARGEBRICKS = REGISTRY.register("andesitelargebricks", () -> new AndesitelargebricksBlock());
	public static final RegistryObject<Block> ANDESITESMALLBRICKS = REGISTRY.register("andesitesmallbricks", () -> new AndesitesmallbricksBlock());
	public static final RegistryObject<Block> ANDESITECORNER = REGISTRY.register("andesitecorner", () -> new AndesitecornerBlock());
	public static final RegistryObject<Block> ANDESITEVERTICAL = REGISTRY.register("andesitevertical", () -> new AndesiteverticalBlock());
	public static final RegistryObject<Block> ANDESITETRAPDOOR = REGISTRY.register("andesitetrapdoor", () -> new AndesitetrapdoorBlock());
	public static final RegistryObject<Block> ARROWSLITCOBBLESTONE = REGISTRY.register("arrowslitcobblestone", () -> new ArrowslitcobblestoneBlock());
	public static final RegistryObject<Block> VERTCOBBLESTONE = REGISTRY.register("vertcobblestone", () -> new VertcobblestoneBlock());
	public static final RegistryObject<Block> CORNERCOBBLESTONE = REGISTRY.register("cornercobblestone", () -> new CornercobblestoneBlock());
	public static final RegistryObject<Block> TRAPDOORCOBBLESTONE = REGISTRY.register("trapdoorcobblestone", () -> new TrapdoorcobblestoneBlock());
	public static final RegistryObject<Block> HOPPERCOBBLE = REGISTRY.register("hoppercobble", () -> new HoppercobbleBlock());
	public static final RegistryObject<Block> COBBLEWINDOWGOTHIC = REGISTRY.register("cobblewindowgothic", () -> new CobblewindowgothicBlock());
	public static final RegistryObject<Block> SMALLBRICKSCORNER = REGISTRY.register("smallbrickscorner", () -> new SmallbrickscornerBlock());
	public static final RegistryObject<Block> SMALLBRICKSVERTICAL = REGISTRY.register("smallbricksvertical", () -> new SmallbricksverticalBlock());
	public static final RegistryObject<Block> SMALLBRICKTRAPDOOR = REGISTRY.register("smallbricktrapdoor", () -> new SmallbricktrapdoorBlock());
	public static final RegistryObject<Block> HOPPERSMALLSMOOTHBRICKS = REGISTRY.register("hoppersmallsmoothbricks",
			() -> new HoppersmallsmoothbricksBlock());
	public static final RegistryObject<Block> BRICKSCORNER = REGISTRY.register("brickscorner", () -> new BrickscornerBlock());
	public static final RegistryObject<Block> BRICKSVERTICAL = REGISTRY.register("bricksvertical", () -> new BricksverticalBlock());
	public static final RegistryObject<Block> BRICKSTRAPDOOR = REGISTRY.register("brickstrapdoor", () -> new BrickstrapdoorBlock());
	public static final RegistryObject<Block> SLATEBRICKS = REGISTRY.register("slatebricks", () -> new SlatebricksBlock());
	public static final RegistryObject<Block> SLATEBRICKSTAIRS = REGISTRY.register("slatebrickstairs", () -> new SlatebrickstairsBlock());
	public static final RegistryObject<Block> SLATEBRICKSLAB = REGISTRY.register("slatebrickslab", () -> new SlatebrickslabBlock());
	public static final RegistryObject<Block> MUDDYCOBBLECORNER = REGISTRY.register("muddycobblecorner", () -> new MuddycobblecornerBlock());
	public static final RegistryObject<Block> MUDDYCOBBLEVERTICAL = REGISTRY.register("muddycobblevertical", () -> new MuddycobbleverticalBlock());
	public static final RegistryObject<Block> MUDDYCOBBLETRAPDOOR = REGISTRY.register("muddycobbletrapdoor", () -> new MuddycobbletrapdoorBlock());
	public static final RegistryObject<Block> SLATEBRICKWALL = REGISTRY.register("slatebrickwall", () -> new SlatebrickwallBlock());
	public static final RegistryObject<Block> SLATEBRICKVERTICAL = REGISTRY.register("slatebrickvertical", () -> new SlatebrickverticalBlock());
	public static final RegistryObject<Block> SLATEBRICKCORNER = REGISTRY.register("slatebrickcorner", () -> new SlatebrickcornerBlock());
	public static final RegistryObject<Block> SLATEBRICKTRAPDOOR = REGISTRY.register("slatebricktrapdoor", () -> new SlatebricktrapdoorBlock());
	public static final RegistryObject<Block> HOPPERSLATEBRICK = REGISTRY.register("hopperslatebrick", () -> new HopperslatebrickBlock());
	public static final RegistryObject<Block> TUDORBRICKS = REGISTRY.register("tudorbricks", () -> new TudorbricksBlock());
	public static final RegistryObject<Block> TUDORBRICKSAGED = REGISTRY.register("tudorbricksaged", () -> new TudorbricksagedBlock());
	public static final RegistryObject<Block> TUDORBRICKSTAIRS = REGISTRY.register("tudorbrickstairs", () -> new TudorbrickstairsBlock());
	public static final RegistryObject<Block> TUDORBRICKSLAB = REGISTRY.register("tudorbrickslab", () -> new TudorbrickslabBlock());
	public static final RegistryObject<Block> TUDORBRICKWALL = REGISTRY.register("tudorbrickwall", () -> new TudorbrickwallBlock());
	public static final RegistryObject<Block> TUDORBRICKCORNER = REGISTRY.register("tudorbrickcorner", () -> new TudorbrickcornerBlock());
	public static final RegistryObject<Block> TUDORBRICKVERTICAL = REGISTRY.register("tudorbrickvertical", () -> new TudorbrickverticalBlock());
	public static final RegistryObject<Block> TUDORBRICKTRAPDOOR = REGISTRY.register("tudorbricktrapdoor", () -> new TudorbricktrapdoorBlock());
	public static final RegistryObject<Block> COBBLESTONEDOOR = REGISTRY.register("cobblestonedoor", () -> new CobblestonedoorBlock());
	public static final RegistryObject<Block> BLACKMARBLE_32 = REGISTRY.register("blackmarble_32", () -> new Blackmarble32Block());
	public static final RegistryObject<Block> GRANITEBRICKS = REGISTRY.register("granitebricks", () -> new GranitebricksBlock());
	public static final RegistryObject<Block> GRANITEBRICKSTAIRS = REGISTRY.register("granitebrickstairs", () -> new GranitebrickstairsBlock());
	public static final RegistryObject<Block> GRANITEBRICKSLAB = REGISTRY.register("granitebrickslab", () -> new GranitebrickslabBlock());
	public static final RegistryObject<Block> GRANITEBRICKWALL = REGISTRY.register("granitebrickwall", () -> new GranitebrickwallBlock());
	public static final RegistryObject<Block> GRANITECOBBLE = REGISTRY.register("granitecobble", () -> new GranitecobbleBlock());
	public static final RegistryObject<Block> GRANITECOBBLESLAB = REGISTRY.register("granitecobbleslab", () -> new GranitecobbleslabBlock());
	public static final RegistryObject<Block> GRANITECOBBLESTAIRS = REGISTRY.register("granitecobblestairs", () -> new GranitecobblestairsBlock());
	public static final RegistryObject<Block> GRANITECOBBLEWALL = REGISTRY.register("granitecobblewall", () -> new GranitecobblewallBlock());
	public static final RegistryObject<Block> GRANITEBRICKTRAPDOOR = REGISTRY.register("granitebricktrapdoor", () -> new GranitebricktrapdoorBlock());
	public static final RegistryObject<Block> GRANITECOBBLETRAPDOOR = REGISTRY.register("granitecobbletrapdoor",
			() -> new GranitecobbletrapdoorBlock());
	public static final RegistryObject<Block> GRANITELARGEBRICKS = REGISTRY.register("granitelargebricks", () -> new GranitelargebricksBlock());
	public static final RegistryObject<Block> GRANITESMALLBRICKS = REGISTRY.register("granitesmallbricks", () -> new GranitesmallbricksBlock());
	public static final RegistryObject<Block> GRANITESMALLBRICKSLAB = REGISTRY.register("granitesmallbrickslab",
			() -> new GranitesmallbrickslabBlock());
	public static final RegistryObject<Block> GRANITESMALLBRICKSTAIRS = REGISTRY.register("granitesmallbrickstairs",
			() -> new GranitesmallbrickstairsBlock());
	public static final RegistryObject<Block> GRANITESMALLBRICKWALL = REGISTRY.register("granitesmallbrickwall",
			() -> new GranitesmallbrickwallBlock());
	public static final RegistryObject<Block> GRANITESMALLBRICKTRAPDOOR = REGISTRY.register("granitesmallbricktrapdoor",
			() -> new GranitesmallbricktrapdoorBlock());
	public static final RegistryObject<Block> ROOFTILESGRAY = REGISTRY.register("rooftilesgray", () -> new RooftilesgrayBlock());
	public static final RegistryObject<Block> BLUESLATECORNER = REGISTRY.register("blueslatecorner", () -> new BlueslatecornerBlock());
	public static final RegistryObject<Block> BLUESLATEVERTICAL = REGISTRY.register("blueslatevertical", () -> new BlueslateverticalBlock());
	public static final RegistryObject<Block> SLATETIPBLUE = REGISTRY.register("slatetipblue", () -> new SlatetipblueBlock());
	public static final RegistryObject<Block> BROWNSLATECORNER = REGISTRY.register("brownslatecorner", () -> new BrownslatecornerBlock());
	public static final RegistryObject<Block> BROWNSLATEVERTICAL = REGISTRY.register("brownslatevertical", () -> new BrownslateverticalBlock());
	public static final RegistryObject<Block> SLATETIPBROWN = REGISTRY.register("slatetipbrown", () -> new SlatetipbrownBlock());
	public static final RegistryObject<Block> REDSLATECORNER = REGISTRY.register("redslatecorner", () -> new RedslatecornerBlock());
	public static final RegistryObject<Block> REDSLATEVERTICAL = REGISTRY.register("redslatevertical", () -> new RedslateverticalBlock());
	public static final RegistryObject<Block> SLATETIPRED = REGISTRY.register("slatetipred", () -> new SlatetipredBlock());
	public static final RegistryObject<Block> NETHERBRICKSCORNER = REGISTRY.register("netherbrickscorner", () -> new NetherbrickscornerBlock());
	public static final RegistryObject<Block> NETHERBRICKSVERTICAL = REGISTRY.register("netherbricksvertical", () -> new NetherbricksverticalBlock());
	public static final RegistryObject<Block> SLATETIPNETHER = REGISTRY.register("slatetipnether", () -> new SlatetipnetherBlock());
	public static final RegistryObject<Block> SHINGLES = REGISTRY.register("shingles", () -> new ShinglesBlock());
	public static final RegistryObject<Block> SHINGLESSTAIRS = REGISTRY.register("shinglesstairs", () -> new ShinglesstairsBlock());
	public static final RegistryObject<Block> SHINGLESSLAB = REGISTRY.register("shinglesslab", () -> new ShinglesslabBlock());
	public static final RegistryObject<Block> SHINGLESWALL = REGISTRY.register("shingleswall", () -> new ShingleswallBlock());
	public static final RegistryObject<Block> SHINGLESCORNER = REGISTRY.register("shinglescorner", () -> new ShinglescornerBlock());
	public static final RegistryObject<Block> SHINGLESVERTICAL = REGISTRY.register("shinglesvertical", () -> new ShinglesverticalBlock());
	public static final RegistryObject<Block> SLATETIPSHINGLES = REGISTRY.register("slatetipshingles", () -> new SlatetipshinglesBlock());
	public static final RegistryObject<Block> THATCHCORNER = REGISTRY.register("thatchcorner", () -> new ThatchcornerBlock());
	public static final RegistryObject<Block> THATCHVERT = REGISTRY.register("thatchvert", () -> new ThatchvertBlock());
	public static final RegistryObject<Block> THATCHDARKCORNER = REGISTRY.register("thatchdarkcorner", () -> new ThatchdarkcornerBlock());
	public static final RegistryObject<Block> THATCHDARKVERT = REGISTRY.register("thatchdarkvert", () -> new ThatchdarkvertBlock());
	public static final RegistryObject<Block> GREENROOFTILES = REGISTRY.register("greenrooftiles", () -> new GreenrooftilesBlock());
	public static final RegistryObject<Block> GREENROOFTILESSLAB = REGISTRY.register("greenrooftilesslab", () -> new GreenrooftilesslabBlock());
	public static final RegistryObject<Block> GREENROOFTILESSTAIRS = REGISTRY.register("greenrooftilesstairs", () -> new GreenrooftilesstairsBlock());
	public static final RegistryObject<Block> GREENROOFTILESWALL = REGISTRY.register("greenrooftileswall", () -> new GreenrooftileswallBlock());
	public static final RegistryObject<Block> GREENROOFTILESCORNER = REGISTRY.register("greenrooftilescorner", () -> new GreenrooftilescornerBlock());
	public static final RegistryObject<Block> GREENROOFTILEVERTICALSLAB = REGISTRY.register("greenrooftileverticalslab",
			() -> new GreenrooftileverticalslabBlock());
	public static final RegistryObject<Block> SLATETIPGREEN = REGISTRY.register("slatetipgreen", () -> new SlatetipgreenBlock());
	public static final RegistryObject<Block> BLACKROOFTILES = REGISTRY.register("blackrooftiles", () -> new BlackrooftilesBlock());
	public static final RegistryObject<Block> BLACKROOFTILESLAB = REGISTRY.register("blackrooftileslab", () -> new BlackrooftileslabBlock());
	public static final RegistryObject<Block> BLACKROOFTILESTAIRS = REGISTRY.register("blackrooftilestairs", () -> new BlackrooftilestairsBlock());
	public static final RegistryObject<Block> BLACKROOFTILEWALL = REGISTRY.register("blackrooftilewall", () -> new BlackrooftilewallBlock());
	public static final RegistryObject<Block> BLACKROOFTILECORNER = REGISTRY.register("blackrooftilecorner", () -> new BlackrooftilecornerBlock());
	public static final RegistryObject<Block> BLACKROOFTILEVERTICAL = REGISTRY.register("blackrooftilevertical",
			() -> new BlackrooftileverticalBlock());
	public static final RegistryObject<Block> SLATETIPBLACK = REGISTRY.register("slatetipblack", () -> new SlatetipblackBlock());
	public static final RegistryObject<Block> THATCHMOSSY = REGISTRY.register("thatchmossy", () -> new ThatchmossyBlock());
	public static final RegistryObject<Block> THATCHMOSSYSTAIRS = REGISTRY.register("thatchmossystairs", () -> new ThatchmossystairsBlock());
	public static final RegistryObject<Block> THATCHMOSSYSLAB = REGISTRY.register("thatchmossyslab", () -> new ThatchmossyslabBlock());
	public static final RegistryObject<Block> THATCHMOSSYWALL = REGISTRY.register("thatchmossywall", () -> new ThatchmossywallBlock());
	public static final RegistryObject<Block> THATCHGRAY = REGISTRY.register("thatchgray", () -> new ThatchgrayBlock());
	public static final RegistryObject<Block> THATCHGRAYSLAB = REGISTRY.register("thatchgrayslab", () -> new ThatchgrayslabBlock());
	public static final RegistryObject<Block> THATCHGRAYSTAIRS = REGISTRY.register("thatchgraystairs", () -> new ThatchgraystairsBlock());
	public static final RegistryObject<Block> THATCHGRAYWALL = REGISTRY.register("thatchgraywall", () -> new ThatchgraywallBlock());
	public static final RegistryObject<Block> THATCHGRAYCROSSSTITCH = REGISTRY.register("thatchgraycrossstitch",
			() -> new ThatchgraycrossstitchBlock());
	public static final RegistryObject<Block> THATCHGRAYCROSSSTITCHSLAB = REGISTRY.register("thatchgraycrossstitchslab",
			() -> new ThatchgraycrossstitchslabBlock());
	public static final RegistryObject<Block> THATCHGRAYCROSSSTITCHSTAIRS = REGISTRY.register("thatchgraycrossstitchstairs",
			() -> new ThatchgraycrossstitchstairsBlock());
	public static final RegistryObject<Block> THATCHGRAYCROSSSTITCHWALL = REGISTRY.register("thatchgraycrossstitchwall",
			() -> new ThatchgraycrossstitchwallBlock());
	public static final RegistryObject<Block> NEWSHINGLETEXTURETEST = REGISTRY.register("newshingletexturetest",
			() -> new NewshingletexturetestBlock());
	public static final RegistryObject<Block> YELLOWTIMBERCROSS = REGISTRY.register("yellowtimbercross", () -> new YellowtimbercrossBlock());
	public static final RegistryObject<Block> YELLOWTIMBER = REGISTRY.register("yellowtimber", () -> new YellowtimberBlock());
	public static final RegistryObject<Block> YELLOWTIMBEREAST = REGISTRY.register("yellowtimbereast", () -> new YellowtimbereastBlock());
	public static final RegistryObject<Block> YELLOWTIMBERWEST = REGISTRY.register("yellowtimberwest", () -> new YellowtimberwestBlock());
	public static final RegistryObject<Block> BRONZEBLOCK = REGISTRY.register("bronzeblock", () -> new BronzeblockBlock());
	public static final RegistryObject<Block> BRONZESLAB = REGISTRY.register("bronzeslab", () -> new BronzeslabBlock());
	public static final RegistryObject<Block> BRONZESTAIRS = REGISTRY.register("bronzestairs", () -> new BronzestairsBlock());
	public static final RegistryObject<Block> BRONZWALL = REGISTRY.register("bronzwall", () -> new BronzwallBlock());
	public static final RegistryObject<Block> BRONZEFENCE = REGISTRY.register("bronzefence", () -> new BronzefenceBlock());
	public static final RegistryObject<Block> BRONZEBLOCKOXIDIZED = REGISTRY.register("bronzeblockoxidized", () -> new BronzeblockoxidizedBlock());
	public static final RegistryObject<Block> BRONZESLABOXIDIZED = REGISTRY.register("bronzeslaboxidized", () -> new BronzeslaboxidizedBlock());
	public static final RegistryObject<Block> BRONZESTAIRS_OXIDIZED = REGISTRY.register("bronzestairs_oxidized",
			() -> new BronzestairsOxidizedBlock());
	public static final RegistryObject<Block> BRONZEWALL_OXIDIZED = REGISTRY.register("bronzewall_oxidized", () -> new BronzewallOxidizedBlock());
	public static final RegistryObject<Block> BRONZEFENCEOXIDIZED = REGISTRY.register("bronzefenceoxidized", () -> new BronzefenceoxidizedBlock());
	public static final RegistryObject<Block> WOVENWOOLBLUE = REGISTRY.register("wovenwoolblue", () -> new WovenwoolblueBlock());
	public static final RegistryObject<Block> WOVENWOOLBLUESLAB = REGISTRY.register("wovenwoolblueslab", () -> new WovenwoolblueslabBlock());
	public static final RegistryObject<Block> WOVENWOOLBLUESTAIRS = REGISTRY.register("wovenwoolbluestairs", () -> new WovenwoolbluestairsBlock());
	public static final RegistryObject<Block> WOVENWOOLBLUEWALL = REGISTRY.register("wovenwoolbluewall", () -> new WovenwoolbluewallBlock());
	public static final RegistryObject<Block> WOVENWOOLGREEN = REGISTRY.register("wovenwoolgreen", () -> new WovenwoolgreenBlock());
	public static final RegistryObject<Block> WOVENWOOLGREENSLAB = REGISTRY.register("wovenwoolgreenslab", () -> new WovenwoolgreenslabBlock());
	public static final RegistryObject<Block> WOVENWOOLGREENSTAIRS = REGISTRY.register("wovenwoolgreenstairs", () -> new WovenwoolgreenstairsBlock());
	public static final RegistryObject<Block> WOVENWOOLGREENWALL = REGISTRY.register("wovenwoolgreenwall", () -> new WovenwoolgreenwallBlock());
	public static final RegistryObject<Block> WOVENWOOLLIGHTGRAY = REGISTRY.register("wovenwoollightgray", () -> new WovenwoollightgrayBlock());
	public static final RegistryObject<Block> WOVENWOOLLIGHTGRAYSLAB = REGISTRY.register("wovenwoollightgrayslab",
			() -> new WovenwoollightgrayslabBlock());
	public static final RegistryObject<Block> WOVENWOOLLIGHTGRAYSTAIRS = REGISTRY.register("wovenwoollightgraystairs",
			() -> new WovenwoollightgraystairsBlock());
	public static final RegistryObject<Block> WOVENWOOLLIGHTGRAYWALL = REGISTRY.register("wovenwoollightgraywall",
			() -> new WovenwoollightgraywallBlock());
	public static final RegistryObject<Block> WOVENWOOLRED = REGISTRY.register("wovenwoolred", () -> new WovenwoolredBlock());
	public static final RegistryObject<Block> WOVENWOOLREDSLAB = REGISTRY.register("wovenwoolredslab", () -> new WovenwoolredslabBlock());
	public static final RegistryObject<Block> WOVENWOOLREDSTAIRS = REGISTRY.register("wovenwoolredstairs", () -> new WovenwoolredstairsBlock());
	public static final RegistryObject<Block> WOVENWOOLREDWALL = REGISTRY.register("wovenwoolredwall", () -> new WovenwoolredwallBlock());
	public static final RegistryObject<Block> WOVENWOOLWHITE = REGISTRY.register("wovenwoolwhite", () -> new WovenwoolwhiteBlock());
	public static final RegistryObject<Block> WOVENWOOLWHITESLAB = REGISTRY.register("wovenwoolwhiteslab", () -> new WovenwoolwhiteslabBlock());
	public static final RegistryObject<Block> WOVENWOOLWHITESTAIRS = REGISTRY.register("wovenwoolwhitestairs", () -> new WovenwoolwhitestairsBlock());
	public static final RegistryObject<Block> WOVENWOOLWHITEWALL = REGISTRY.register("wovenwoolwhitewall", () -> new WovenwoolwhitewallBlock());
	public static final RegistryObject<Block> WOVENWOOLYELLOW = REGISTRY.register("wovenwoolyellow", () -> new WovenwoolyellowBlock());
	public static final RegistryObject<Block> WOVENWOOLYELLOWSTAIRS = REGISTRY.register("wovenwoolyellowstairs",
			() -> new WovenwoolyellowstairsBlock());
	public static final RegistryObject<Block> WOVENWOOLYELLOWSLAB = REGISTRY.register("wovenwoolyellowslab", () -> new WovenwoolyellowslabBlock());
	public static final RegistryObject<Block> WOVENWOOLYELLOWWALL = REGISTRY.register("wovenwoolyellowwall", () -> new WovenwoolyellowwallBlock());
	public static final RegistryObject<Block> WHITETIMBERCROSS = REGISTRY.register("whitetimbercross", () -> new WhitetimbercrossBlock());
	public static final RegistryObject<Block> WHITETIMBEREAST = REGISTRY.register("whitetimbereast", () -> new WhitetimbereastBlock());
	public static final RegistryObject<Block> WHITETIMBERWEST = REGISTRY.register("whitetimberwest", () -> new WhitetimberwestBlock());
	public static final RegistryObject<Block> WHITETIMBER = REGISTRY.register("whitetimber", () -> new WhitetimberBlock());
	public static final RegistryObject<Block> WHITETIMBERARCH = REGISTRY.register("whitetimberarch", () -> new WhitetimberarchBlock());
	public static final RegistryObject<Block> BROWNTIMBERCROSS = REGISTRY.register("browntimbercross", () -> new BrowntimbercrossBlock());
	public static final RegistryObject<Block> BROWNTIMBEREAST = REGISTRY.register("browntimbereast", () -> new BrowntimbereastBlock());
	public static final RegistryObject<Block> BROWNTIMBERWEST = REGISTRY.register("browntimberwest", () -> new BrowntimberwestBlock());
	public static final RegistryObject<Block> BROWNTIMBER = REGISTRY.register("browntimber", () -> new BrowntimberBlock());
	public static final RegistryObject<Block> BROWNTIMBERARCH = REGISTRY.register("browntimberarch", () -> new BrowntimberarchBlock());
	public static final RegistryObject<Block> REDTIMBERCROSS = REGISTRY.register("redtimbercross", () -> new RedtimbercrossBlock());
	public static final RegistryObject<Block> REDTIMBEREAST = REGISTRY.register("redtimbereast", () -> new RedtimbereastBlock());
	public static final RegistryObject<Block> REDTIMBERWEST = REGISTRY.register("redtimberwest", () -> new RedtimberwestBlock());
	public static final RegistryObject<Block> REDTIMBER = REGISTRY.register("redtimber", () -> new RedtimberBlock());
	public static final RegistryObject<Block> REDTIMBERARCH = REGISTRY.register("redtimberarch", () -> new RedtimberarchBlock());
	public static final RegistryObject<Block> WHITEOAKTIMBERCROSS = REGISTRY.register("whiteoaktimbercross", () -> new WhiteoaktimbercrossBlock());
	public static final RegistryObject<Block> WHITEOAKTIMBEREAST = REGISTRY.register("whiteoaktimbereast", () -> new WhiteoaktimbereastBlock());
	public static final RegistryObject<Block> WHITEOAKTIMBERWEST = REGISTRY.register("whiteoaktimberwest", () -> new WhiteoaktimberwestBlock());
	public static final RegistryObject<Block> WHITEOAKTIMBER = REGISTRY.register("whiteoaktimber", () -> new WhiteoaktimberBlock());
	public static final RegistryObject<Block> WHITEOAKTIMBERVERTICAL = REGISTRY.register("whiteoaktimbervertical",
			() -> new WhiteoaktimberverticalBlock());
	public static final RegistryObject<Block> WHITEOAKTIMBERCLOSESTUDDING = REGISTRY.register("whiteoaktimberclosestudding",
			() -> new WhiteoaktimberclosestuddingBlock());
	public static final RegistryObject<Block> WHITEDARKTIMBER = REGISTRY.register("whitedarktimber", () -> new WhitedarktimberBlock());
	public static final RegistryObject<Block> WHITEDARKTIMBERCROSS = REGISTRY.register("whitedarktimbercross", () -> new WhitedarktimbercrossBlock());
	public static final RegistryObject<Block> WHITEDARKTIMBEREAST = REGISTRY.register("whitedarktimbereast", () -> new WhitedarktimbereastBlock());
	public static final RegistryObject<Block> WHITEDARKTIMBERWEST = REGISTRY.register("whitedarktimberwest", () -> new WhitedarktimberwestBlock());
	public static final RegistryObject<Block> WHITEDARKTIMBERCLOSESTUDDING = REGISTRY.register("whitedarktimberclosestudding",
			() -> new WhitedarktimberclosestuddingBlock());
	public static final RegistryObject<Block> WHITEDARKTIMBERVERTICAL = REGISTRY.register("whitedarktimbervertical",
			() -> new WhitedarktimberverticalBlock());
	public static final RegistryObject<Block> FARMLANDALWAYSMOIST = REGISTRY.register("farmlandalwaysmoist", () -> new FarmlandalwaysmoistBlock());
	public static final RegistryObject<Block> SHOJIDOORCLOSED = REGISTRY.register("shojidoorclosed", () -> new ShojidoorclosedBlock());
	public static final RegistryObject<Block> OAKWALLPANEL = REGISTRY.register("oakwallpanel", () -> new OakwallpanelBlock());
	public static final RegistryObject<Block> AAATRAPDOOR = REGISTRY.register("aaatrapdoor", () -> new AaatrapdoorBlock());
	public static final RegistryObject<Block> AADOOR = REGISTRY.register("aadoor", () -> new AadoorBlock());
	public static final RegistryObject<Block> OAKVERTICAL = REGISTRY.register("oakvertical", () -> new OakverticalBlock());
	public static final RegistryObject<Block> OAKCORNER = REGISTRY.register("oakcorner", () -> new OakcornerBlock());
	public static final RegistryObject<Block> OAKTHINWALL = REGISTRY.register("oakthinwall", () -> new OakthinwallBlock());
	public static final RegistryObject<Block> HOPPEROAK = REGISTRY.register("hopperoak", () -> new HopperoakBlock());
	public static final RegistryObject<Block> SPRUCEVERTICAL = REGISTRY.register("sprucevertical", () -> new SpruceverticalBlock());
	public static final RegistryObject<Block> SPRUCECORNER = REGISTRY.register("sprucecorner", () -> new SprucecornerBlock());
	public static final RegistryObject<Block> SPRUCETHINWALL = REGISTRY.register("sprucethinwall", () -> new SprucethinwallBlock());
	public static final RegistryObject<Block> HOPPERSPRUCE = REGISTRY.register("hopperspruce", () -> new HopperspruceBlock());
	public static final RegistryObject<Block> SPRUCECEILINGBLOCK = REGISTRY.register("spruceceilingblock", () -> new SpruceceilingblockBlock());
	public static final RegistryObject<Block> JUNGLECORNER = REGISTRY.register("junglecorner", () -> new JunglecornerBlock());
	public static final RegistryObject<Block> JUNGLEVERTICAL = REGISTRY.register("junglevertical", () -> new JungleverticalBlock());
	public static final RegistryObject<Block> JUNGLETHINGWALL = REGISTRY.register("junglethingwall", () -> new JunglethingwallBlock());
	public static final RegistryObject<Block> HOPPERJUNGLE = REGISTRY.register("hopperjungle", () -> new HopperjungleBlock());
	public static final RegistryObject<Block> BIRCHVERTICAL = REGISTRY.register("birchvertical", () -> new BirchverticalBlock());
	public static final RegistryObject<Block> BIRCHCORNER = REGISTRY.register("birchcorner", () -> new BirchcornerBlock());
	public static final RegistryObject<Block> BIRCHTHINWALL = REGISTRY.register("birchthinwall", () -> new BirchthinwallBlock());
	public static final RegistryObject<Block> HOPPERBIRCH = REGISTRY.register("hopperbirch", () -> new HopperbirchBlock());
	public static final RegistryObject<Block> DARKOAKVERTICAL = REGISTRY.register("darkoakvertical", () -> new DarkoakverticalBlock());
	public static final RegistryObject<Block> DARKOAKCORNER = REGISTRY.register("darkoakcorner", () -> new DarkoakcornerBlock());
	public static final RegistryObject<Block> DARKOAKTHINWALL = REGISTRY.register("darkoakthinwall", () -> new DarkoakthinwallBlock());
	public static final RegistryObject<Block> HOPPERDARKOAK = REGISTRY.register("hopperdarkoak", () -> new HopperdarkoakBlock());
	public static final RegistryObject<Block> BEAM = REGISTRY.register("beam", () -> new BeamBlock());
	public static final RegistryObject<Block> BEAMHORISONTAL = REGISTRY.register("beamhorisontal", () -> new BeamhorisontalBlock());
	public static final RegistryObject<Block> NAILEDPLANKS = REGISTRY.register("nailedplanks", () -> new NailedplanksBlock());
	public static final RegistryObject<Block> NAILEDPLANKSLAB = REGISTRY.register("nailedplankslab", () -> new NailedplankslabBlock());
	public static final RegistryObject<Block> BLACKWOOD = REGISTRY.register("blackwood", () -> new BlackwoodBlock());
	public static final RegistryObject<Block> BLACKWOODSLAB = REGISTRY.register("blackwoodslab", () -> new BlackwoodslabBlock());
	public static final RegistryObject<Block> BLACKWOODSTAIRS = REGISTRY.register("blackwoodstairs", () -> new BlackwoodstairsBlock());
	public static final RegistryObject<Block> BLACKWOODWALL = REGISTRY.register("blackwoodwall", () -> new BlackwoodwallBlock());
	public static final RegistryObject<Block> BLACKWOODFENCE = REGISTRY.register("blackwoodfence", () -> new BlackwoodfenceBlock());
	public static final RegistryObject<Block> BLACKWOODTHINWALL = REGISTRY.register("blackwoodthinwall", () -> new BlackwoodthinwallBlock());
	public static final RegistryObject<Block> BLACKWOODVERTICALPLANKS = REGISTRY.register("blackwoodverticalplanks",
			() -> new BlackwoodverticalplanksBlock());
	public static final RegistryObject<Block> HOPPERBLACKWOOD = REGISTRY.register("hopperblackwood", () -> new HopperblackwoodBlock());
	public static final RegistryObject<Block> GRAYOAKTIMBER = REGISTRY.register("grayoaktimber", () -> new GrayoaktimberBlock());
	public static final RegistryObject<Block> GRAYOAKTIMBERCROSS = REGISTRY.register("grayoaktimbercross", () -> new GrayoaktimbercrossBlock());
	public static final RegistryObject<Block> GRAYOAKTIMBERWEST = REGISTRY.register("grayoaktimberwest", () -> new GrayoaktimberwestBlock());
	public static final RegistryObject<Block> GRAYOAKTIMBEREAST = REGISTRY.register("grayoaktimbereast", () -> new GrayoaktimbereastBlock());
	public static final RegistryObject<Block> PALEYELLOWDARKTIMBER = REGISTRY.register("paleyellowdarktimber", () -> new PaleyellowdarktimberBlock());
	public static final RegistryObject<Block> PALEYELLOWDARKTIMBERCROSS = REGISTRY.register("paleyellowdarktimbercross",
			() -> new PaleyellowdarktimbercrossBlock());
	public static final RegistryObject<Block> PALEYELLOWDARKTIMBEREAST = REGISTRY.register("paleyellowdarktimbereast",
			() -> new PaleyellowdarktimbereastBlock());
	public static final RegistryObject<Block> PALEYELLOWDARKTIMBERWEST = REGISTRY.register("paleyellowdarktimberwest",
			() -> new PaleyellowdarktimberwestBlock());
	public static final RegistryObject<Block> PALEYELLOWDAUB = REGISTRY.register("paleyellowdaub", () -> new PaleyellowdaubBlock());
	public static final RegistryObject<Block> SPRUCERAILING = REGISTRY.register("sprucerailing", () -> new SprucerailingBlock());
	public static final RegistryObject<Block> SPRUCERAILINGB = REGISTRY.register("sprucerailingb", () -> new SprucerailingbBlock());
	public static final RegistryObject<Block> SPRUCERAILINGM = REGISTRY.register("sprucerailingm", () -> new SprucerailingmBlock());
	public static final RegistryObject<Block> SPRUCERAILINGT = REGISTRY.register("sprucerailingt", () -> new SprucerailingtBlock());
	public static final RegistryObject<Block> REDTIMBERWHITE = REGISTRY.register("redtimberwhite", () -> new RedtimberwhiteBlock());
	public static final RegistryObject<Block> REDTIMBERWHITECROSS = REGISTRY.register("redtimberwhitecross", () -> new RedtimberwhitecrossBlock());
	public static final RegistryObject<Block> REDTIMBERWHITEEAST = REGISTRY.register("redtimberwhiteeast", () -> new RedtimberwhiteeastBlock());
	public static final RegistryObject<Block> REDTIMBERWHITEWEST = REGISTRY.register("redtimberwhitewest", () -> new RedtimberwhitewestBlock());
	public static final RegistryObject<Block> REDTIMBERWHITEVERTICAL = REGISTRY.register("redtimberwhitevertical",
			() -> new RedtimberwhiteverticalBlock());
	public static final RegistryObject<Block> REDWINDOWFRAME = REGISTRY.register("redwindowframe", () -> new RedwindowframeBlock());
	public static final RegistryObject<Block> BLUETIMBERWHITE = REGISTRY.register("bluetimberwhite", () -> new BluetimberwhiteBlock());
	public static final RegistryObject<Block> BLUETIMBERWHITECROSS = REGISTRY.register("bluetimberwhitecross", () -> new BluetimberwhitecrossBlock());
	public static final RegistryObject<Block> BLUETIMBERWHITEEAST = REGISTRY.register("bluetimberwhiteeast", () -> new BluetimberwhiteeastBlock());
	public static final RegistryObject<Block> BLUEWHITETIMBERWEST = REGISTRY.register("bluewhitetimberwest", () -> new BluewhitetimberwestBlock());
	public static final RegistryObject<Block> BLUEWHITETIMBERVERTICAL = REGISTRY.register("bluewhitetimbervertical",
			() -> new BluewhitetimberverticalBlock());
	public static final RegistryObject<Block> BLUEWINDOWFRAME = REGISTRY.register("bluewindowframe", () -> new BluewindowframeBlock());
	public static final RegistryObject<Block> BRICKOAKTIMBER = REGISTRY.register("brickoaktimber", () -> new BrickoaktimberBlock());
	public static final RegistryObject<Block> BRICKOAKTIMBERCLOSESTUDDING = REGISTRY.register("brickoaktimberclosestudding",
			() -> new BrickoaktimberclosestuddingBlock());
	public static final RegistryObject<Block> BRICKOAKTIMBERCROSS = REGISTRY.register("brickoaktimbercross", () -> new BrickoaktimbercrossBlock());
	public static final RegistryObject<Block> BRICKOAKTIMBEREAST = REGISTRY.register("brickoaktimbereast", () -> new BrickoaktimbereastBlock());
	public static final RegistryObject<Block> BRICKOAKTIMBERWEST = REGISTRY.register("brickoaktimberwest", () -> new BrickoaktimberwestBlock());
	public static final RegistryObject<Block> DARKOAKWALLPANEL = REGISTRY.register("darkoakwallpanel", () -> new DarkoakwallpanelBlock());
	public static final RegistryObject<Block> STATUSWIP = REGISTRY.register("statuswip", () -> new StatuswipBlock());
	public static final RegistryObject<Block> STATUSDONE = REGISTRY.register("statusdone", () -> new StatusdoneBlock());
	public static final RegistryObject<Block> STATUSAPPROVED = REGISTRY.register("statusapproved", () -> new StatusapprovedBlock());
	public static final RegistryObject<Block> STATUSBLOCKCOUNT = REGISTRY.register("statusblockcount", () -> new StatusblockcountBlock());
	public static final RegistryObject<Block> STATUSERROR = REGISTRY.register("statuserror", () -> new StatuserrorBlock());
	public static final RegistryObject<Block> VANILLAGRAYCONCRETE = REGISTRY.register("vanillagrayconcrete", () -> new VanillagrayconcreteBlock());
	public static final RegistryObject<Block> VANILLAGREENCONCRETE = REGISTRY.register("vanillagreenconcrete", () -> new VanillagreenconcreteBlock());
	public static final RegistryObject<Block> VANILLALIGHTGRAYCONCRETE = REGISTRY.register("vanillalightgrayconcrete",
			() -> new VanillalightgrayconcreteBlock());
	public static final RegistryObject<Block> VANILLAWHITECONCRETE = REGISTRY.register("vanillawhiteconcrete", () -> new VanillawhiteconcreteBlock());
	public static final RegistryObject<Block> STATUSHIGHCLASS = REGISTRY.register("statushighclass", () -> new StatushighclassBlock());
	public static final RegistryObject<Block> STATUSMIDDLECLASS = REGISTRY.register("statusmiddleclass", () -> new StatusmiddleclassBlock());
	public static final RegistryObject<Block> STATUSLOWCLASS = REGISTRY.register("statuslowclass", () -> new StatuslowclassBlock());
	public static final RegistryObject<Block> OLDWORLD_PORTAL = REGISTRY.register("oldworld_portal", () -> new OldworldPortalBlock());
	public static final RegistryObject<Block> TESTWORLD_PORTAL = REGISTRY.register("testworld_portal", () -> new TestworldPortalBlock());
	public static final RegistryObject<Block> ICEWALL = REGISTRY.register("icewall", () -> new IcewallBlock());
	public static final RegistryObject<Block> ICESPIKE = REGISTRY.register("icespike", () -> new IcespikeBlock());
	public static final RegistryObject<Block> SMALLBUSH = REGISTRY.register("smallbush", () -> new SmallbushBlock());
	public static final RegistryObject<Block> BUSHYOAKLEAVES = REGISTRY.register("bushyoakleaves", () -> new BushyoakleavesBlock());
	public static final RegistryObject<Block> BUSHYOAKLEAVESAPPLES = REGISTRY.register("bushyoakleavesapples", () -> new BushyoakleavesapplesBlock());
	public static final RegistryObject<Block> BUSHYOAKLEAVESAUTUMNAL = REGISTRY.register("bushyoakleavesautumnal",
			() -> new BushyoakleavesautumnalBlock());
	public static final RegistryObject<Block> BUSHYBIRCHLEAVES = REGISTRY.register("bushybirchleaves", () -> new BushybirchleavesBlock());
	public static final RegistryObject<Block> BUSHYSPRUCELEAVES = REGISTRY.register("bushyspruceleaves", () -> new BushyspruceleavesBlock());
	public static final RegistryObject<Block> BUSHYCHERRYLEAVESBRANCH = REGISTRY.register("bushycherryleavesbranch",
			() -> new BushycherryleavesbranchBlock());
	public static final RegistryObject<Block> LIGHTMUD = REGISTRY.register("lightmud", () -> new LightmudBlock());
	public static final RegistryObject<Block> DRYMUD = REGISTRY.register("drymud", () -> new DrymudBlock());
	public static final RegistryObject<Block> DARKDRYMUD = REGISTRY.register("darkdrymud", () -> new DarkdrymudBlock());
	public static final RegistryObject<Block> SOIL = REGISTRY.register("soil", () -> new SoilBlock());
	public static final RegistryObject<Block> DARKMUD = REGISTRY.register("darkmud", () -> new DarkmudBlock());
	public static final RegistryObject<Block> RIVERPEBBLES = REGISTRY.register("riverpebbles", () -> new RiverpebblesBlock());
	public static final RegistryObject<Block> LIGHTMOSS = REGISTRY.register("lightmoss", () -> new LightmossBlock());
	public static final RegistryObject<Block> MOSS = REGISTRY.register("moss", () -> new MossBlock());
	public static final RegistryObject<Block> DARKMOSS = REGISTRY.register("darkmoss", () -> new DarkmossBlock());
	public static final RegistryObject<Block> WINTERGRASSBLOCK = REGISTRY.register("wintergrassblock", () -> new WintergrassblockBlock());
	public static final RegistryObject<Block> FORESTFLOOR = REGISTRY.register("forestfloor", () -> new ForestfloorBlock());
	public static final RegistryObject<Block> DEADLEAVES = REGISTRY.register("deadleaves", () -> new DeadleavesBlock());
	public static final RegistryObject<Block> MOSSYSTONE = REGISTRY.register("mossystone", () -> new MossystoneBlock());
	public static final RegistryObject<Block> GRASSBLOCKSLAB = REGISTRY.register("grassblockslab", () -> new GrassblockslabBlock());
	public static final RegistryObject<Block> DIRTLAYER = REGISTRY.register("dirtlayer", () -> new DirtlayerBlock());
	public static final RegistryObject<Block> MUSHROOMCOLONY = REGISTRY.register("mushroomcolony", () -> new MushroomcolonyBlock());
	public static final RegistryObject<Block> WILDBEETROOTS = REGISTRY.register("wildbeetroots", () -> new WildbeetrootsBlock());
	public static final RegistryObject<Block> WILDCABBAGES = REGISTRY.register("wildcabbages", () -> new WildcabbagesBlock());
	public static final RegistryObject<Block> WILDCARROTS = REGISTRY.register("wildcarrots", () -> new WildcarrotsBlock());
	public static final RegistryObject<Block> WILDONIONS = REGISTRY.register("wildonions", () -> new WildonionsBlock());
	public static final RegistryObject<Block> WILDLILYOFTHEVALLEY = REGISTRY.register("wildlilyofthevalley", () -> new WildlilyofthevalleyBlock());
	public static final RegistryObject<Block> CABBAGES = REGISTRY.register("cabbages", () -> new CabbagesBlock());
	public static final RegistryObject<Block> ONIONS = REGISTRY.register("onions", () -> new OnionsBlock());
	public static final RegistryObject<Block> BIGLEAFEDGRASS = REGISTRY.register("bigleafedgrass", () -> new BigleafedgrassBlock());
	public static final RegistryObject<Block> VINESROSEWHITE = REGISTRY.register("vinesrosewhite", () -> new VinesrosewhiteBlock());
	public static final RegistryObject<Block> LIMESTONE = REGISTRY.register("limestone", () -> new LimestoneBlock());
	public static final RegistryObject<Block> LIMESTONESLAB = REGISTRY.register("limestoneslab", () -> new LimestoneslabBlock());
	public static final RegistryObject<Block> LIMESTONESTAIRS = REGISTRY.register("limestonestairs", () -> new LimestonestairsBlock());
	public static final RegistryObject<Block> LIMESTONEWALL = REGISTRY.register("limestonewall", () -> new LimestonewallBlock());
	public static final RegistryObject<Block> LIMESTONE_0 = REGISTRY.register("limestone_0", () -> new Limestone0Block());
	public static final RegistryObject<Block> LIMESTONE_0SLAB = REGISTRY.register("limestone_0slab", () -> new Limestone0slabBlock());
	public static final RegistryObject<Block> LIMESTONE_0STAIRS = REGISTRY.register("limestone_0stairs", () -> new Limestone0stairsBlock());
	public static final RegistryObject<Block> LIMESTONE_0WALL = REGISTRY.register("limestone_0wall", () -> new Limestone0wallBlock());
	public static final RegistryObject<Block> LIMESTONE_1 = REGISTRY.register("limestone_1", () -> new Limestone1Block());
	public static final RegistryObject<Block> LIMESTONE_1SLAB = REGISTRY.register("limestone_1slab", () -> new Limestone1slabBlock());
	public static final RegistryObject<Block> LIMESTONE_1STAIRS = REGISTRY.register("limestone_1stairs", () -> new Limestone1stairsBlock());
	public static final RegistryObject<Block> LIMESTONE_1WALL = REGISTRY.register("limestone_1wall", () -> new Limestone1wallBlock());
	public static final RegistryObject<Block> LIMESTONE_2 = REGISTRY.register("limestone_2", () -> new Limestone2Block());
	public static final RegistryObject<Block> LIMESTONE_2SLAB = REGISTRY.register("limestone_2slab", () -> new Limestone2slabBlock());
	public static final RegistryObject<Block> LIMESTONE_2STAIRS = REGISTRY.register("limestone_2stairs", () -> new Limestone2stairsBlock());
	public static final RegistryObject<Block> LIMESTONE_2WALL = REGISTRY.register("limestone_2wall", () -> new Limestone2wallBlock());
	public static final RegistryObject<Block> LIMESTONE_3 = REGISTRY.register("limestone_3", () -> new Limestone3Block());
	public static final RegistryObject<Block> LIMESTONE_3SLAB = REGISTRY.register("limestone_3slab", () -> new Limestone3slabBlock());
	public static final RegistryObject<Block> LIMESTONE_3STAIRS = REGISTRY.register("limestone_3stairs", () -> new Limestone3stairsBlock());
	public static final RegistryObject<Block> LIMESTONE_3WALL = REGISTRY.register("limestone_3wall", () -> new Limestone3wallBlock());
	public static final RegistryObject<Block> OAKWALLLOG = REGISTRY.register("oakwalllog", () -> new OakwalllogBlock());
	public static final RegistryObject<Block> OAKFENCELOG = REGISTRY.register("oakfencelog", () -> new OakfencelogBlock());
	public static final RegistryObject<Block> SPRUCEFENCELOG = REGISTRY.register("sprucefencelog", () -> new SprucefencelogBlock());
	public static final RegistryObject<Block> SPRUCEWALLLOG = REGISTRY.register("sprucewalllog", () -> new SprucewalllogBlock());
	public static final RegistryObject<Block> BIRCHFENCELOG = REGISTRY.register("birchfencelog", () -> new BirchfencelogBlock());
	public static final RegistryObject<Block> BIRCHWALLLOG = REGISTRY.register("birchwalllog", () -> new BirchwalllogBlock());
	public static final RegistryObject<Block> LOGWALL = REGISTRY.register("logwall", () -> new LogwallBlock());
	public static final RegistryObject<Block> STOOL = REGISTRY.register("stool", () -> new StoolBlock());
	public static final RegistryObject<Block> CLAYPOT = REGISTRY.register("claypot", () -> new ClaypotBlock());
	public static final RegistryObject<Block> BASKET = REGISTRY.register("basket", () -> new BasketBlock());
	public static final RegistryObject<Block> CHAIR = REGISTRY.register("chair", () -> new ChairBlock());
	public static final RegistryObject<Block> WHEEL = REGISTRY.register("wheel", () -> new WheelBlock());
	public static final RegistryObject<Block> WATTLE = REGISTRY.register("wattle", () -> new WattleBlock());
	public static final RegistryObject<Block> CLEAVER = REGISTRY.register("cleaver", () -> new CleaverBlock());
	public static final RegistryObject<Block> SMOKE = REGISTRY.register("smoke", () -> new SmokeBlock());
	public static final RegistryObject<Block> CLOTHESLINE = REGISTRY.register("clothesline", () -> new ClotheslineBlock());
	public static final RegistryObject<Block> OAKCABINET = REGISTRY.register("oakcabinet", () -> new OakcabinetBlock());
	public static final RegistryObject<Block> SPRUCECABINET = REGISTRY.register("sprucecabinet", () -> new SprucecabinetBlock());
	public static final RegistryObject<Block> POWDERSACK = REGISTRY.register("powdersack", () -> new PowdersackBlock());
	public static final RegistryObject<Block> STOVE = REGISTRY.register("stove", () -> new StoveBlock());
	public static final RegistryObject<Block> KNIFE = REGISTRY.register("knife", () -> new KnifeBlock());
	public static final RegistryObject<Block> ASHLIGHT = REGISTRY.register("ashlight", () -> new AshlightBlock());
	public static final RegistryObject<Block> CINDERBLOCK = REGISTRY.register("cinderblock", () -> new CinderblockBlock());
	public static final RegistryObject<Block> BUCKET = REGISTRY.register("bucket", () -> new BucketBlock());
	public static final RegistryObject<Block> CLOSEDHEARTH = REGISTRY.register("closedhearth", () -> new ClosedhearthBlock());
	public static final RegistryObject<Block> CRATE = REGISTRY.register("crate", () -> new CrateBlock());
	public static final RegistryObject<Block> CRATESLAB = REGISTRY.register("crateslab", () -> new CrateslabBlock());
	public static final RegistryObject<Block> SACKSLAB = REGISTRY.register("sackslab", () -> new SackslabBlock());
	public static final RegistryObject<Block> SACK = REGISTRY.register("sack", () -> new SackBlock());
	public static final RegistryObject<Block> CLOTHESHANGER = REGISTRY.register("clotheshanger", () -> new ClotheshangerBlock());
	public static final RegistryObject<Block> WEAVINGLOOM = REGISTRY.register("weavingloom", () -> new WeavingloomBlock());
	public static final RegistryObject<Block> WINDOWFRAMEBOTTOM = REGISTRY.register("windowframebottom", () -> new WindowframebottomBlock());
	public static final RegistryObject<Block> WINDOWFRAMETOP = REGISTRY.register("windowframetop", () -> new WindowframetopBlock());
	public static final RegistryObject<Block> SPRUCESHUTTERMIDDLE = REGISTRY.register("spruceshuttermiddle", () -> new SpruceshuttermiddleBlock());
	public static final RegistryObject<Block> TIMBERBEAMEAST = REGISTRY.register("timberbeameast", () -> new TimberbeameastBlock());
	public static final RegistryObject<Block> DARKSTRAWBED = REGISTRY.register("darkstrawbed", () -> new DarkstrawbedBlock());
	public static final RegistryObject<Block> STRAWBED = REGISTRY.register("strawbed", () -> new StrawbedBlock());
	public static final RegistryObject<Block> CUSHION = REGISTRY.register("cushion", () -> new CushionBlock());
	public static final RegistryObject<Block> BASKETBLOCK = REGISTRY.register("basketblock", () -> new BasketblockBlock());
	public static final RegistryObject<Block> BASKETSLAB = REGISTRY.register("basketslab", () -> new BasketslabBlock());
	public static final RegistryObject<Block> BASKETBLOCKOPEN = REGISTRY.register("basketblockopen", () -> new BasketblockopenBlock());
	public static final RegistryObject<Block> BASKETSLABOPEN = REGISTRY.register("basketslabopen", () -> new BasketslabopenBlock());
	public static final RegistryObject<Block> WATTLESHORT = REGISTRY.register("wattleshort", () -> new WattleshortBlock());
	public static final RegistryObject<Block> SOOTLAYER = REGISTRY.register("sootlayer", () -> new SootlayerBlock());
	public static final RegistryObject<Block> GLASSFLAGON = REGISTRY.register("glassflagon", () -> new GlassflagonBlock());
	public static final RegistryObject<Block> PEWTERFLAGON = REGISTRY.register("pewterflagon", () -> new PewterflagonBlock());
	public static final RegistryObject<Block> CERAMICFLAGON = REGISTRY.register("ceramicflagon", () -> new CeramicflagonBlock());
	public static final RegistryObject<Block> GLASSFANCYFRAME = REGISTRY.register("glassfancyframe", () -> new GlassfancyframeBlock());
	public static final RegistryObject<Block> GLASSFANCYFRAMEPANE = REGISTRY.register("glassfancyframepane", () -> new GlassfancyframepaneBlock());
	public static final RegistryObject<Block> SCREEN = REGISTRY.register("screen", () -> new ScreenBlock());
	public static final RegistryObject<Block> THATCHCARPET = REGISTRY.register("thatchcarpet", () -> new ThatchcarpetBlock());
	public static final RegistryObject<Block> THATCHCARPETDARK = REGISTRY.register("thatchcarpetdark", () -> new ThatchcarpetdarkBlock());
	public static final RegistryObject<Block> FIREWOODSLAB = REGISTRY.register("firewoodslab", () -> new FirewoodslabBlock());
	public static final RegistryObject<Block> POTSGROUPED = REGISTRY.register("potsgrouped", () -> new PotsgroupedBlock());
	public static final RegistryObject<Block> WEAPONRACK = REGISTRY.register("weaponrack", () -> new WeaponrackBlock());
	public static final RegistryObject<Block> SIMPLEAXE = REGISTRY.register("simpleaxe", () -> new SimpleaxeBlock());
	public static final RegistryObject<Block> PITCHFORK = REGISTRY.register("pitchfork", () -> new PitchforkBlock());
	public static final RegistryObject<Block> GUARDRAIL = REGISTRY.register("guardrail", () -> new GuardrailBlock());
	public static final RegistryObject<Block> WHEEL_1 = REGISTRY.register("wheel_1", () -> new Wheel1Block());
	public static final RegistryObject<Block> UNLITCANDLE = REGISTRY.register("unlitcandle", () -> new UnlitcandleBlock());
	public static final RegistryObject<Block> FIREWOODPILE = REGISTRY.register("firewoodpile", () -> new FirewoodpileBlock());
	public static final RegistryObject<Block> SHOVEL_0 = REGISTRY.register("shovel_0", () -> new Shovel0Block());
	public static final RegistryObject<Block> FLIES = REGISTRY.register("flies", () -> new FliesBlock());
	public static final RegistryObject<Block> WOLFPELT = REGISTRY.register("wolfpelt", () -> new WolfpeltBlock());
	public static final RegistryObject<Block> OAKDOORWOWINDOWS = REGISTRY.register("oakdoorwowindows", () -> new OakdoorwowindowsBlock());
	public static final RegistryObject<Block> OAKSHUTTER = REGISTRY.register("oakshutter", () -> new OakshutterBlock());
	public static final RegistryObject<Block> OAKSHUTTERRIGHT = REGISTRY.register("oakshutterright", () -> new OakshutterrightBlock());
	public static final RegistryObject<Block> ROPEVERTICAL = REGISTRY.register("ropevertical", () -> new RopeverticalBlock());
	public static final RegistryObject<Block> ROPEHORIZONTAL = REGISTRY.register("ropehorizontal", () -> new RopehorizontalBlock());
	public static final RegistryObject<Block> ROPEHORIZONTALCURVED = REGISTRY.register("ropehorizontalcurved", () -> new RopehorizontalcurvedBlock());
	public static final RegistryObject<Block> ROPEDIAGONAL = REGISTRY.register("ropediagonal", () -> new RopediagonalBlock());
	public static final RegistryObject<Block> ROPEHARNESS = REGISTRY.register("ropeharness", () -> new RopeharnessBlock());
	public static final RegistryObject<Block> CHAINHARNESS = REGISTRY.register("chainharness", () -> new ChainharnessBlock());
	public static final RegistryObject<Block> SPRUCESHUTTER = REGISTRY.register("spruceshutter", () -> new SpruceshutterBlock());
	public static final RegistryObject<Block> SPRUCESHUTTERRIGHT = REGISTRY.register("spruceshutterright", () -> new SpruceshutterrightBlock());
	public static final RegistryObject<Block> STOOLLARGE = REGISTRY.register("stoollarge", () -> new StoollargeBlock());
	public static final RegistryObject<Block> TABLE = REGISTRY.register("table", () -> new TableBlock());
	public static final RegistryObject<Block> TABLETURNEDOVER = REGISTRY.register("tableturnedover", () -> new TableturnedoverBlock());
	public static final RegistryObject<Block> TATAMI_1X_1 = REGISTRY.register("tatami_1x_1", () -> new Tatami1x1Block());
	public static final RegistryObject<Block> TATAMI_1X_2 = REGISTRY.register("tatami_1x_2", () -> new Tatami1x2Block());
	public static final RegistryObject<Block> CHABUDAI = REGISTRY.register("chabudai", () -> new ChabudaiBlock());
	public static final RegistryObject<Block> SHOJI = REGISTRY.register("shoji", () -> new ShojiBlock());
	public static final RegistryObject<Block> TATAMIBLOCKFULL = REGISTRY.register("tatamiblockfull", () -> new TatamiblockfullBlock());
	public static final RegistryObject<Block> TATAMIBLOCKHALF = REGISTRY.register("tatamiblockhalf", () -> new TatamiblockhalfBlock());
	public static final RegistryObject<Block> BANNERYELLOW = REGISTRY.register("banneryellow", () -> new BanneryellowBlock());
	public static final RegistryObject<Block> BANNERRED = REGISTRY.register("bannerred", () -> new BannerredBlock());
	public static final RegistryObject<Block> BANNERGREEN = REGISTRY.register("bannergreen", () -> new BannergreenBlock());
	public static final RegistryObject<Block> TANNINGRACK = REGISTRY.register("tanningrack", () -> new TanningrackBlock());
	public static final RegistryObject<Block> LARGECOOKINGPOT = REGISTRY.register("largecookingpot", () -> new LargecookingpotBlock());
	public static final RegistryObject<Block> TIEDHERBS = REGISTRY.register("tiedherbs", () -> new TiedherbsBlock());
	public static final RegistryObject<Block> CABBAGECRATE = REGISTRY.register("cabbagecrate", () -> new CabbagecrateBlock());
	public static final RegistryObject<Block> BEETROOTCRATE = REGISTRY.register("beetrootcrate", () -> new BeetrootcrateBlock());
	public static final RegistryObject<Block> ONIONCRATE = REGISTRY.register("onioncrate", () -> new OnioncrateBlock());
	public static final RegistryObject<Block> HANGINGBOWL = REGISTRY.register("hangingbowl", () -> new HangingbowlBlock());
	public static final RegistryObject<Block> CARROTCRATE = REGISTRY.register("carrotcrate", () -> new CarrotcrateBlock());
	public static final RegistryObject<Block> STRAWBALE = REGISTRY.register("strawbale", () -> new StrawbaleBlock());
	public static final RegistryObject<Block> HANGEDFISH = REGISTRY.register("hangedfish", () -> new HangedfishBlock());
	public static final RegistryObject<Block> SKILLET = REGISTRY.register("skillet", () -> new SkilletBlock());
	public static final RegistryObject<Block> TRIPODPOT = REGISTRY.register("tripodpot", () -> new TripodpotBlock());
	public static final RegistryObject<Block> SAUSAGES = REGISTRY.register("sausages", () -> new SausagesBlock());
	public static final RegistryObject<Block> SAUSAGESTALL = REGISTRY.register("sausagestall", () -> new SausagestallBlock());
	public static final RegistryObject<Block> SKILLETSHANGED = REGISTRY.register("skilletshanged", () -> new SkilletshangedBlock());
	public static final RegistryObject<Block> COOKEDCHICKEN = REGISTRY.register("cookedchicken", () -> new CookedchickenBlock());
	public static final RegistryObject<Block> COOKEDRABBIT = REGISTRY.register("cookedrabbit", () -> new CookedrabbitBlock());
	public static final RegistryObject<Block> MUTTON = REGISTRY.register("mutton", () -> new MuttonBlock());
	public static final RegistryObject<Block> BEEF = REGISTRY.register("beef", () -> new BeefBlock());
	public static final RegistryObject<Block> PLATE_0 = REGISTRY.register("plate_0", () -> new Plate0Block());
	public static final RegistryObject<Block> PLATE_1 = REGISTRY.register("plate_1", () -> new Plate1Block());
	public static final RegistryObject<Block> TEASET = REGISTRY.register("teaset", () -> new TeasetBlock());
	public static final RegistryObject<Block> PROFESSION_0 = REGISTRY.register("profession_0", () -> new Profession0Block());
	public static final RegistryObject<Block> PROFESSION_1 = REGISTRY.register("profession_1", () -> new Profession1Block());
	public static final RegistryObject<Block> PROFESSION_2 = REGISTRY.register("profession_2", () -> new Profession2Block());
	public static final RegistryObject<Block> PROFESSION_3 = REGISTRY.register("profession_3", () -> new Profession3Block());
	public static final RegistryObject<Block> PROFESSION_4 = REGISTRY.register("profession_4", () -> new Profession4Block());
	public static final RegistryObject<Block> PROFESSION_5 = REGISTRY.register("profession_5", () -> new Profession5Block());
	public static final RegistryObject<Block> PROFESSION_6 = REGISTRY.register("profession_6", () -> new Profession6Block());
	public static final RegistryObject<Block> PROFESSION_7 = REGISTRY.register("profession_7", () -> new Profession7Block());
	public static final RegistryObject<Block> PROFESSION_8 = REGISTRY.register("profession_8", () -> new Profession8Block());
	public static final RegistryObject<Block> PROFESSION_9 = REGISTRY.register("profession_9", () -> new Profession9Block());
	public static final RegistryObject<Block> PROFESSION_10 = REGISTRY.register("profession_10", () -> new Profession10Block());
	public static final RegistryObject<Block> PROFESSION_11 = REGISTRY.register("profession_11", () -> new Profession11Block());
	public static final RegistryObject<Block> PROFESSION_12 = REGISTRY.register("profession_12", () -> new Profession12Block());
	public static final RegistryObject<Block> PROFESSION_13 = REGISTRY.register("profession_13", () -> new Profession13Block());
	public static final RegistryObject<Block> PROFESSION_14 = REGISTRY.register("profession_14", () -> new Profession14Block());
	public static final RegistryObject<Block> PROFESSION_15 = REGISTRY.register("profession_15", () -> new Profession15Block());
	public static final RegistryObject<Block> PROFESSION_16 = REGISTRY.register("profession_16", () -> new Profession16Block());
	public static final RegistryObject<Block> PROFESSION_17 = REGISTRY.register("profession_17", () -> new Profession17Block());
	public static final RegistryObject<Block> PROFESSION_18 = REGISTRY.register("profession_18", () -> new Profession18Block());
	public static final RegistryObject<Block> PROFESSION_19 = REGISTRY.register("profession_19", () -> new Profession19Block());
	public static final RegistryObject<Block> PROFESSION_20 = REGISTRY.register("profession_20", () -> new Profession20Block());
	public static final RegistryObject<Block> PROFESSION_21 = REGISTRY.register("profession_21", () -> new Profession21Block());
	public static final RegistryObject<Block> PROFESSION_22 = REGISTRY.register("profession_22", () -> new Profession22Block());
	public static final RegistryObject<Block> PROFESSION_23 = REGISTRY.register("profession_23", () -> new Profession23Block());
	public static final RegistryObject<Block> ANGLOSAXONSOLDIERGUARD = REGISTRY.register("anglosaxonsoldierguard",
			() -> new AnglosaxonsoldierguardBlock());
	public static final RegistryObject<Block> DANISHSOLDIERGUARD = REGISTRY.register("danishsoldierguard", () -> new DanishsoldierguardBlock());
	public static final RegistryObject<Block> FRANKISHSOLDIERGUARD = REGISTRY.register("frankishsoldierguard", () -> new FrankishsoldierguardBlock());
	public static final RegistryObject<Block> FRISIISOLDIERGUARD = REGISTRY.register("frisiisoldierguard", () -> new FrisiisoldierguardBlock());
	public static final RegistryObject<Block> OAKSHUTTEROPEN = REGISTRY.register("oakshutteropen", () -> new OakshutteropenBlock());
	public static final RegistryObject<Block> SPRUCESHUTTEROPEN = REGISTRY.register("spruceshutteropen", () -> new SpruceshutteropenBlock());
	public static final RegistryObject<Block> SPRUCESHUTTERMIDDLEOPEN = REGISTRY.register("spruceshuttermiddleopen",
			() -> new SpruceshuttermiddleopenBlock());
	public static final RegistryObject<Block> TIMBERBEAMCROSS = REGISTRY.register("timberbeamcross", () -> new TimberbeamcrossBlock());
	public static final RegistryObject<Block> TIMBERBEAMWEST = REGISTRY.register("timberbeamwest", () -> new TimberbeamwestBlock());
	public static final RegistryObject<Block> SOOTLAYER_2 = REGISTRY.register("sootlayer_2", () -> new Sootlayer2Block());
	public static final RegistryObject<Block> DIRTLAYER_2 = REGISTRY.register("dirtlayer_2", () -> new Dirtlayer2Block());
	public static final RegistryObject<Block> DIRTLAYER_3 = REGISTRY.register("dirtlayer_3", () -> new Dirtlayer3Block());
	public static final RegistryObject<Block> DIRTLAYER_4 = REGISTRY.register("dirtlayer_4", () -> new Dirtlayer4Block());
	public static final RegistryObject<Block> DIRTLAYER_5 = REGISTRY.register("dirtlayer_5", () -> new Dirtlayer5Block());
	public static final RegistryObject<Block> DIRTLAYER_6 = REGISTRY.register("dirtlayer_6", () -> new Dirtlayer6Block());
	public static final RegistryObject<Block> DIRTLAYER_7 = REGISTRY.register("dirtlayer_7", () -> new Dirtlayer7Block());
	public static final RegistryObject<Block> DIRTLAYER_8 = REGISTRY.register("dirtlayer_8", () -> new Dirtlayer8Block());
	public static final RegistryObject<Block> OAKSHUTTEROPENRIGHT = REGISTRY.register("oakshutteropenright", () -> new OakshutteropenrightBlock());
	public static final RegistryObject<Block> BANNERHIGHFORT = REGISTRY.register("bannerhighfort", () -> new BannerhighfortBlock());
	public static final RegistryObject<Block> SPRUCESHUTTEROPENRIGHT = REGISTRY.register("spruceshutteropenright",
			() -> new SpruceshutteropenrightBlock());
	public static final RegistryObject<Block> SHOJIDOOROPEN = REGISTRY.register("shojidooropen", () -> new ShojidooropenBlock());
	public static final RegistryObject<Block> STONETEST_1 = REGISTRY.register("stonetest_1", () -> new Stonetest1Block());
	public static final RegistryObject<Block> ANGLOSAXONSOLDIERATTACK = REGISTRY.register("anglosaxonsoldierattack",
			() -> new AnglosaxonsoldierattackBlock());
	public static final RegistryObject<Block> DANISHSOLDIERATTACK = REGISTRY.register("danishsoldierattack", () -> new DanishsoldierattackBlock());
	public static final RegistryObject<Block> FRANKISHSOLDIERATTACK = REGISTRY.register("frankishsoldierattack",
			() -> new FrankishsoldierattackBlock());
	public static final RegistryObject<Block> FRISIISOLDIERATTACK = REGISTRY.register("frisiisoldierattack", () -> new FrisiisoldierattackBlock());
	public static final RegistryObject<Block> THEETERNALONE = REGISTRY.register("theeternalone", () -> new TheeternaloneBlock());
	public static final RegistryObject<Block> WATTLECORNER = REGISTRY.register("wattlecorner", () -> new WattlecornerBlock());
	public static final RegistryObject<Block> ANDESITECOBBLEDSLAB = REGISTRY.register("andesitecobbledslab", () -> new AndesitecobbledslabBlock());
	public static final RegistryObject<Block> ANDESITECOBBLEDSTAIRS = REGISTRY.register("andesitecobbledstairs",
			() -> new AndesitecobbledstairsBlock());
	public static final RegistryObject<Block> ANDESITECOBBLEDWALL = REGISTRY.register("andesitecobbledwall", () -> new AndesitecobbledwallBlock());
	public static final RegistryObject<Block> ANDESITELARGEBRICKSTAIRS = REGISTRY.register("andesitelargebrickstairs",
			() -> new AndesitelargebrickstairsBlock());
	public static final RegistryObject<Block> ANDESITELARGEBRICKSLAB = REGISTRY.register("andesitelargebrickslab",
			() -> new AndesitelargebrickslabBlock());
	public static final RegistryObject<Block> ANDESITELARGEBRICKWALL = REGISTRY.register("andesitelargebrickwall",
			() -> new AndesitelargebrickwallBlock());
	public static final RegistryObject<Block> DIORITELARGEBRICKSTAIRS = REGISTRY.register("dioritelargebrickstairs",
			() -> new DioritelargebrickstairsBlock());
	public static final RegistryObject<Block> DIORITELARGEBRICKSLAB = REGISTRY.register("dioritelargebrickslab",
			() -> new DioritelargebrickslabBlock());
	public static final RegistryObject<Block> DIORITELARGEBRICKWALL = REGISTRY.register("dioritelargebrickwall",
			() -> new DioritelargebrickwallBlock());
	public static final RegistryObject<Block> SANDSTONESMALLBRICKSTAIRS = REGISTRY.register("sandstonesmallbrickstairs",
			() -> new SandstonesmallbrickstairsBlock());
	public static final RegistryObject<Block> SANDSTONESMALLBRICKSLAB = REGISTRY.register("sandstonesmallbrickslab",
			() -> new SandstonesmallbrickslabBlock());
	public static final RegistryObject<Block> SANDSTONESMALLBRICKWALL = REGISTRY.register("sandstonesmallbrickwall",
			() -> new SandstonesmallbrickwallBlock());
	public static final RegistryObject<Block> DARKSANDSTONELARGEBRICKSTAIRS = REGISTRY.register("darksandstonelargebrickstairs",
			() -> new DarksandstonelargebrickstairsBlock());
	public static final RegistryObject<Block> DARKSANDSTONELARGEBRICKSLAB = REGISTRY.register("darksandstonelargebrickslab",
			() -> new DarksandstonelargebrickslabBlock());
	public static final RegistryObject<Block> DARKSANDSTONELARGEBRICKWALL = REGISTRY.register("darksandstonelargebrickwall",
			() -> new DarksandstonelargebrickwallBlock());
	public static final RegistryObject<Block> SANDSTONECOBBLEDSTAIRS = REGISTRY.register("sandstonecobbledstairs",
			() -> new SandstonecobbledstairsBlock());
	public static final RegistryObject<Block> SANDSTONECOBBLEDSLAB = REGISTRY.register("sandstonecobbledslab", () -> new SandstonecobbledslabBlock());
	public static final RegistryObject<Block> SANDSTONECOBBLEDWALL = REGISTRY.register("sandstonecobbledwall", () -> new SandstonecobbledwallBlock());
	public static final RegistryObject<Block> BROWNDAUB = REGISTRY.register("browndaub", () -> new BrowndaubBlock());
	public static final RegistryObject<Block> WHITEDAUB = REGISTRY.register("whitedaub", () -> new WhitedaubBlock());
	public static final RegistryObject<Block> SANDSTONEDIAMONDFLOORTILES = REGISTRY.register("sandstonediamondfloortiles",
			() -> new SandstonediamondfloortilesBlock());
	public static final RegistryObject<Block> SANDSTONEDIAMONDFLOORTILESTAIRS = REGISTRY.register("sandstonediamondfloortilestairs",
			() -> new SandstonediamondfloortilestairsBlock());
	public static final RegistryObject<Block> SANDSTONEDIAMONDFLOORTILESLAB = REGISTRY.register("sandstonediamondfloortileslab",
			() -> new SandstonediamondfloortileslabBlock());
	public static final RegistryObject<Block> SANDSTONEDIAMONDFLOORTILEWALL = REGISTRY.register("sandstonediamondfloortilewall",
			() -> new SandstonediamondfloortilewallBlock());
	public static final RegistryObject<Block> DARKPARQUET = REGISTRY.register("darkparquet", () -> new DarkparquetBlock());
	public static final RegistryObject<Block> ARROWSLITGRANITEBRICK = REGISTRY.register("arrowslitgranitebrick",
			() -> new ArrowslitgranitebrickBlock());
	public static final RegistryObject<Block> ARROWSLITSMALLLIGHTSTONEBRICK = REGISTRY.register("arrowslitsmalllightstonebrick",
			() -> new ArrowslitsmalllightstonebrickBlock());
	public static final RegistryObject<Block> ARROWSLITDARKCOBBLESTONE = REGISTRY.register("arrowslitdarkcobblestone",
			() -> new ArrowslitdarkcobblestoneBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void clientSetup(FMLClientSetupEvent event) {
			HoppersandstoneBlock.registerRenderLayer();
			ArrowslitsandstoneBlock.registerRenderLayer();
			StoneverticalBlock.registerRenderLayer();
			StonecornerBlock.registerRenderLayer();
			StonetrapdoorBlock.registerRenderLayer();
			GranitecornerBlock.registerRenderLayer();
			GraniteverticalBlock.registerRenderLayer();
			GranitetrapdoorBlock.registerRenderLayer();
			DioritecornerBlock.registerRenderLayer();
			DioriteverticalBlock.registerRenderLayer();
			DioritetrapdoorBlock.registerRenderLayer();
			AndesitecornerBlock.registerRenderLayer();
			AndesiteverticalBlock.registerRenderLayer();
			AndesitetrapdoorBlock.registerRenderLayer();
			ArrowslitcobblestoneBlock.registerRenderLayer();
			VertcobblestoneBlock.registerRenderLayer();
			CornercobblestoneBlock.registerRenderLayer();
			TrapdoorcobblestoneBlock.registerRenderLayer();
			HoppercobbleBlock.registerRenderLayer();
			CobblewindowgothicBlock.registerRenderLayer();
			SmallbrickscornerBlock.registerRenderLayer();
			SmallbricksverticalBlock.registerRenderLayer();
			SmallbricktrapdoorBlock.registerRenderLayer();
			HoppersmallsmoothbricksBlock.registerRenderLayer();
			BrickscornerBlock.registerRenderLayer();
			BricksverticalBlock.registerRenderLayer();
			BrickstrapdoorBlock.registerRenderLayer();
			MuddycobblecornerBlock.registerRenderLayer();
			MuddycobbleverticalBlock.registerRenderLayer();
			MuddycobbletrapdoorBlock.registerRenderLayer();
			SlatebrickverticalBlock.registerRenderLayer();
			SlatebrickcornerBlock.registerRenderLayer();
			SlatebricktrapdoorBlock.registerRenderLayer();
			HopperslatebrickBlock.registerRenderLayer();
			TudorbrickcornerBlock.registerRenderLayer();
			TudorbrickverticalBlock.registerRenderLayer();
			TudorbricktrapdoorBlock.registerRenderLayer();
			CobblestonedoorBlock.registerRenderLayer();
			BlueslatecornerBlock.registerRenderLayer();
			BlueslateverticalBlock.registerRenderLayer();
			SlatetipblueBlock.registerRenderLayer();
			BrownslatecornerBlock.registerRenderLayer();
			BrownslateverticalBlock.registerRenderLayer();
			SlatetipbrownBlock.registerRenderLayer();
			RedslatecornerBlock.registerRenderLayer();
			RedslateverticalBlock.registerRenderLayer();
			SlatetipredBlock.registerRenderLayer();
			NetherbrickscornerBlock.registerRenderLayer();
			NetherbricksverticalBlock.registerRenderLayer();
			SlatetipnetherBlock.registerRenderLayer();
			ShinglescornerBlock.registerRenderLayer();
			ShinglesverticalBlock.registerRenderLayer();
			SlatetipshinglesBlock.registerRenderLayer();
			ThatchcornerBlock.registerRenderLayer();
			ThatchvertBlock.registerRenderLayer();
			ThatchdarkcornerBlock.registerRenderLayer();
			ThatchdarkvertBlock.registerRenderLayer();
			GreenrooftilescornerBlock.registerRenderLayer();
			GreenrooftileverticalslabBlock.registerRenderLayer();
			SlatetipgreenBlock.registerRenderLayer();
			BlackrooftilecornerBlock.registerRenderLayer();
			BlackrooftileverticalBlock.registerRenderLayer();
			SlatetipblackBlock.registerRenderLayer();
			FarmlandalwaysmoistBlock.registerRenderLayer();
			ShojidoorclosedBlock.registerRenderLayer();
			AaatrapdoorBlock.registerRenderLayer();
			AadoorBlock.registerRenderLayer();
			OakverticalBlock.registerRenderLayer();
			OakcornerBlock.registerRenderLayer();
			OakthinwallBlock.registerRenderLayer();
			HopperoakBlock.registerRenderLayer();
			SpruceverticalBlock.registerRenderLayer();
			SprucecornerBlock.registerRenderLayer();
			SprucethinwallBlock.registerRenderLayer();
			HopperspruceBlock.registerRenderLayer();
			SpruceceilingblockBlock.registerRenderLayer();
			JunglecornerBlock.registerRenderLayer();
			JungleverticalBlock.registerRenderLayer();
			JunglethingwallBlock.registerRenderLayer();
			HopperjungleBlock.registerRenderLayer();
			BirchverticalBlock.registerRenderLayer();
			BirchcornerBlock.registerRenderLayer();
			BirchthinwallBlock.registerRenderLayer();
			HopperbirchBlock.registerRenderLayer();
			DarkoakverticalBlock.registerRenderLayer();
			DarkoakcornerBlock.registerRenderLayer();
			DarkoakthinwallBlock.registerRenderLayer();
			HopperdarkoakBlock.registerRenderLayer();
			BeamBlock.registerRenderLayer();
			BeamhorisontalBlock.registerRenderLayer();
			BlackwoodthinwallBlock.registerRenderLayer();
			HopperblackwoodBlock.registerRenderLayer();
			GrayoaktimberBlock.registerRenderLayer();
			GrayoaktimbercrossBlock.registerRenderLayer();
			GrayoaktimberwestBlock.registerRenderLayer();
			GrayoaktimbereastBlock.registerRenderLayer();
			PaleyellowdarktimberBlock.registerRenderLayer();
			PaleyellowdarktimbercrossBlock.registerRenderLayer();
			PaleyellowdarktimbereastBlock.registerRenderLayer();
			PaleyellowdarktimberwestBlock.registerRenderLayer();
			SprucerailingBlock.registerRenderLayer();
			SprucerailingbBlock.registerRenderLayer();
			SprucerailingmBlock.registerRenderLayer();
			SprucerailingtBlock.registerRenderLayer();
			RedtimberwhiteBlock.registerRenderLayer();
			RedtimberwhitecrossBlock.registerRenderLayer();
			RedtimberwhiteeastBlock.registerRenderLayer();
			RedtimberwhitewestBlock.registerRenderLayer();
			RedtimberwhiteverticalBlock.registerRenderLayer();
			RedwindowframeBlock.registerRenderLayer();
			BluetimberwhiteBlock.registerRenderLayer();
			BluetimberwhitecrossBlock.registerRenderLayer();
			BluetimberwhiteeastBlock.registerRenderLayer();
			BluewhitetimberwestBlock.registerRenderLayer();
			BluewhitetimberverticalBlock.registerRenderLayer();
			BluewindowframeBlock.registerRenderLayer();
			OldworldPortalBlock.registerRenderLayer();
			TestworldPortalBlock.registerRenderLayer();
			IcewallBlock.registerRenderLayer();
			IcespikeBlock.registerRenderLayer();
			SmallbushBlock.registerRenderLayer();
			BushyoakleavesBlock.registerRenderLayer();
			BushyoakleavesapplesBlock.registerRenderLayer();
			BushyoakleavesautumnalBlock.registerRenderLayer();
			BushybirchleavesBlock.registerRenderLayer();
			BushyspruceleavesBlock.registerRenderLayer();
			BushycherryleavesbranchBlock.registerRenderLayer();
			WintergrassblockBlock.registerRenderLayer();
			ForestfloorBlock.registerRenderLayer();
			DeadleavesBlock.registerRenderLayer();
			MossystoneBlock.registerRenderLayer();
			DirtlayerBlock.registerRenderLayer();
			MushroomcolonyBlock.registerRenderLayer();
			WildbeetrootsBlock.registerRenderLayer();
			WildcabbagesBlock.registerRenderLayer();
			WildcarrotsBlock.registerRenderLayer();
			WildonionsBlock.registerRenderLayer();
			WildlilyofthevalleyBlock.registerRenderLayer();
			CabbagesBlock.registerRenderLayer();
			OnionsBlock.registerRenderLayer();
			BigleafedgrassBlock.registerRenderLayer();
			VinesrosewhiteBlock.registerRenderLayer();
			OakwalllogBlock.registerRenderLayer();
			OakfencelogBlock.registerRenderLayer();
			SprucefencelogBlock.registerRenderLayer();
			SprucewalllogBlock.registerRenderLayer();
			BirchfencelogBlock.registerRenderLayer();
			BirchwalllogBlock.registerRenderLayer();
			LogwallBlock.registerRenderLayer();
			StoolBlock.registerRenderLayer();
			ClaypotBlock.registerRenderLayer();
			BasketBlock.registerRenderLayer();
			ChairBlock.registerRenderLayer();
			WheelBlock.registerRenderLayer();
			WattleBlock.registerRenderLayer();
			CleaverBlock.registerRenderLayer();
			SmokeBlock.registerRenderLayer();
			ClotheslineBlock.registerRenderLayer();
			KnifeBlock.registerRenderLayer();
			BucketBlock.registerRenderLayer();
			ClotheshangerBlock.registerRenderLayer();
			WeavingloomBlock.registerRenderLayer();
			WindowframebottomBlock.registerRenderLayer();
			WindowframetopBlock.registerRenderLayer();
			SpruceshuttermiddleBlock.registerRenderLayer();
			TimberbeameastBlock.registerRenderLayer();
			DarkstrawbedBlock.registerRenderLayer();
			StrawbedBlock.registerRenderLayer();
			CushionBlock.registerRenderLayer();
			WattleshortBlock.registerRenderLayer();
			SootlayerBlock.registerRenderLayer();
			GlassflagonBlock.registerRenderLayer();
			PewterflagonBlock.registerRenderLayer();
			CeramicflagonBlock.registerRenderLayer();
			GlassfancyframeBlock.registerRenderLayer();
			GlassfancyframepaneBlock.registerRenderLayer();
			ScreenBlock.registerRenderLayer();
			ThatchcarpetBlock.registerRenderLayer();
			ThatchcarpetdarkBlock.registerRenderLayer();
			PotsgroupedBlock.registerRenderLayer();
			WeaponrackBlock.registerRenderLayer();
			SimpleaxeBlock.registerRenderLayer();
			PitchforkBlock.registerRenderLayer();
			GuardrailBlock.registerRenderLayer();
			Wheel1Block.registerRenderLayer();
			UnlitcandleBlock.registerRenderLayer();
			FirewoodpileBlock.registerRenderLayer();
			Shovel0Block.registerRenderLayer();
			FliesBlock.registerRenderLayer();
			WolfpeltBlock.registerRenderLayer();
			OakdoorwowindowsBlock.registerRenderLayer();
			OakshutterBlock.registerRenderLayer();
			OakshutterrightBlock.registerRenderLayer();
			RopeverticalBlock.registerRenderLayer();
			RopehorizontalBlock.registerRenderLayer();
			RopehorizontalcurvedBlock.registerRenderLayer();
			RopediagonalBlock.registerRenderLayer();
			RopeharnessBlock.registerRenderLayer();
			ChainharnessBlock.registerRenderLayer();
			SpruceshutterBlock.registerRenderLayer();
			SpruceshutterrightBlock.registerRenderLayer();
			StoollargeBlock.registerRenderLayer();
			TableBlock.registerRenderLayer();
			TableturnedoverBlock.registerRenderLayer();
			Tatami1x1Block.registerRenderLayer();
			Tatami1x2Block.registerRenderLayer();
			ChabudaiBlock.registerRenderLayer();
			ShojiBlock.registerRenderLayer();
			TatamiblockfullBlock.registerRenderLayer();
			TatamiblockhalfBlock.registerRenderLayer();
			BanneryellowBlock.registerRenderLayer();
			BannerredBlock.registerRenderLayer();
			BannergreenBlock.registerRenderLayer();
			TanningrackBlock.registerRenderLayer();
			LargecookingpotBlock.registerRenderLayer();
			TiedherbsBlock.registerRenderLayer();
			HangingbowlBlock.registerRenderLayer();
			HangedfishBlock.registerRenderLayer();
			SkilletBlock.registerRenderLayer();
			TripodpotBlock.registerRenderLayer();
			SausagesBlock.registerRenderLayer();
			SausagestallBlock.registerRenderLayer();
			SkilletshangedBlock.registerRenderLayer();
			CookedchickenBlock.registerRenderLayer();
			CookedrabbitBlock.registerRenderLayer();
			MuttonBlock.registerRenderLayer();
			BeefBlock.registerRenderLayer();
			Plate0Block.registerRenderLayer();
			Plate1Block.registerRenderLayer();
			TeasetBlock.registerRenderLayer();
			Profession0Block.registerRenderLayer();
			Profession1Block.registerRenderLayer();
			Profession2Block.registerRenderLayer();
			Profession3Block.registerRenderLayer();
			Profession4Block.registerRenderLayer();
			Profession5Block.registerRenderLayer();
			Profession6Block.registerRenderLayer();
			Profession7Block.registerRenderLayer();
			Profession8Block.registerRenderLayer();
			Profession9Block.registerRenderLayer();
			Profession10Block.registerRenderLayer();
			Profession11Block.registerRenderLayer();
			Profession12Block.registerRenderLayer();
			Profession13Block.registerRenderLayer();
			Profession14Block.registerRenderLayer();
			Profession15Block.registerRenderLayer();
			Profession16Block.registerRenderLayer();
			Profession17Block.registerRenderLayer();
			Profession18Block.registerRenderLayer();
			Profession19Block.registerRenderLayer();
			Profession20Block.registerRenderLayer();
			Profession21Block.registerRenderLayer();
			Profession22Block.registerRenderLayer();
			Profession23Block.registerRenderLayer();
			AnglosaxonsoldierguardBlock.registerRenderLayer();
			DanishsoldierguardBlock.registerRenderLayer();
			FrankishsoldierguardBlock.registerRenderLayer();
			FrisiisoldierguardBlock.registerRenderLayer();
			OakshutteropenBlock.registerRenderLayer();
			SpruceshutteropenBlock.registerRenderLayer();
			SpruceshuttermiddleopenBlock.registerRenderLayer();
			TimberbeamcrossBlock.registerRenderLayer();
			TimberbeamwestBlock.registerRenderLayer();
			Sootlayer2Block.registerRenderLayer();
			Dirtlayer2Block.registerRenderLayer();
			Dirtlayer3Block.registerRenderLayer();
			Dirtlayer4Block.registerRenderLayer();
			Dirtlayer5Block.registerRenderLayer();
			Dirtlayer6Block.registerRenderLayer();
			Dirtlayer7Block.registerRenderLayer();
			OakshutteropenrightBlock.registerRenderLayer();
			BannerhighfortBlock.registerRenderLayer();
			SpruceshutteropenrightBlock.registerRenderLayer();
			ShojidooropenBlock.registerRenderLayer();
			AnglosaxonsoldierattackBlock.registerRenderLayer();
			DanishsoldierattackBlock.registerRenderLayer();
			FrankishsoldierattackBlock.registerRenderLayer();
			FrisiisoldierattackBlock.registerRenderLayer();
			TheeternaloneBlock.registerRenderLayer();
			WattlecornerBlock.registerRenderLayer();
			DarkparquetBlock.registerRenderLayer();
			ArrowslitgranitebrickBlock.registerRenderLayer();
			ArrowslitsmalllightstonebrickBlock.registerRenderLayer();
			ArrowslitdarkcobblestoneBlock.registerRenderLayer();
		}

		@SubscribeEvent
		public static void blockColorLoad(ColorHandlerEvent.Block event) {
			SmallbushBlock.blockColorLoad(event);
			BushyoakleavesBlock.blockColorLoad(event);
			BushyoakleavesapplesBlock.blockColorLoad(event);
			BushybirchleavesBlock.blockColorLoad(event);
			BushyspruceleavesBlock.blockColorLoad(event);
			BigleafedgrassBlock.blockColorLoad(event);
			VinesrosewhiteBlock.blockColorLoad(event);
			ChairBlock.blockColorLoad(event);
		}

		@SubscribeEvent
		public static void itemColorLoad(ColorHandlerEvent.Item event) {
			BushyoakleavesBlock.itemColorLoad(event);
			BushyoakleavesapplesBlock.itemColorLoad(event);
			BushybirchleavesBlock.itemColorLoad(event);
			BushyspruceleavesBlock.itemColorLoad(event);
			BigleafedgrassBlock.itemColorLoad(event);
			VinesrosewhiteBlock.itemColorLoad(event);
		}
	}
}
